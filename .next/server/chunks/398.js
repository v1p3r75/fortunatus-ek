"use strict";exports.id=398,exports.ids=[398],exports.modules={74827:(e,t,r)=>{var s,o,i=Object.create,n=Object.defineProperty,a=Object.getOwnPropertyDescriptor,c=Object.getOwnPropertyNames,l=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty,__copyProps=(e,t,r,s)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let o of c(t))u.call(e,o)||o===r||n(e,o,{get:()=>t[o],enumerable:!(s=a(t,o))||s.enumerable});return e},p={};((e,t)=>{for(var r in t)n(e,r,{get:t[r],enumerable:!0})})(p,{createAppAuth:()=>createAppAuth,createOAuthUserAuth:()=>b.createOAuthUserAuth}),e.exports=__copyProps(n({},"__esModule",{value:!0}),p);var d=r(50102),h=r(3501),g=r(93662),m=r(32052);o=null!=(s=r(93662))?i(l(s)):{},__copyProps(s&&s.__esModule?o:n(o,"default",{value:s,enumerable:!0}),s);var _=r(29387);async function getAppAuthentication({appId:e,privateKey:t,timeDifference:r}){try{let s=await (0,_.githubAppJwt)({id:+e,privateKey:t,now:r&&Math.floor(Date.now()/1e3)+r});return{type:"app",token:s.token,appId:s.appId,expiresAt:new Date(1e3*s.expiration).toISOString()}}catch(e){if("-----BEGIN RSA PRIVATE KEY-----"===t)throw Error("The 'privateKey` option contains only the first line '-----BEGIN RSA PRIVATE KEY-----'. If you are setting it using a `.env` file, make sure it is set on a single line with newlines replaced by '\n'");throw e}}var T=r(49743);function getCache(){return new T.LRUCache({max:15e3,ttl:354e4})}async function get(e,t){let r=optionsToCacheKey(t),s=await e.get(r);if(!s)return;let[o,i,n,a,c,l]=s.split("|"),u=t.permissions||c.split(/,/).reduce((e,t)=>(/!$/.test(t)?e[t.slice(0,-1)]="write":e[t]="read",e),{});return{token:o,createdAt:i,expiresAt:n,permissions:u,repositoryIds:t.repositoryIds,repositoryNames:t.repositoryNames,singleFileName:l,repositorySelection:a}}async function set(e,t,r){let s=optionsToCacheKey(t),o=t.permissions?"":Object.keys(r.permissions).map(e=>`${e}${"write"===r.permissions[e]?"!":""}`).join(","),i=[r.token,r.createdAt,r.expiresAt,r.repositorySelection,o,r.singleFileName].join("|");await e.set(s,i)}function optionsToCacheKey({installationId:e,permissions:t={},repositoryIds:r=[],repositoryNames:s=[]}){let o=Object.keys(t).sort().map(e=>"read"===t[e]?e:`${e}!`).join(","),i=r.sort().join(","),n=s.join(",");return[e,i,n,o].filter(Boolean).join("|")}function toTokenAuthentication({installationId:e,token:t,createdAt:r,expiresAt:s,repositorySelection:o,permissions:i,repositoryIds:n,repositoryNames:a,singleFileName:c}){return Object.assign({type:"token",tokenType:"installation",token:t,installationId:e,permissions:i,createdAt:r,expiresAt:s,repositorySelection:o},n?{repositoryIds:n}:null,a?{repositoryNames:a}:null,c?{singleFileName:c}:null)}async function getInstallationAuthentication(e,t,r){let s=Number(t.installationId||e.installationId);if(!s)throw Error("[@octokit/auth-app] installationId option is required for installation authentication.");if(t.factory){let{type:r,factory:s,oauthApp:o,...i}={...e,...t};return s(i)}let o=Object.assign({installationId:s},t);if(!t.refresh){let t=await get(e.cache,o);if(t){let{token:e,createdAt:r,expiresAt:o,permissions:i,repositoryIds:n,repositoryNames:a,singleFileName:c,repositorySelection:l}=t;return toTokenAuthentication({installationId:s,token:e,createdAt:r,expiresAt:o,permissions:i,repositorySelection:l,repositoryIds:n,repositoryNames:a,singleFileName:c})}}let i=await getAppAuthentication(e),n=r||e.request,{data:{token:a,expires_at:c,repositories:l,permissions:u,repository_selection:p,single_file:d}}=await n("POST /app/installations/{installation_id}/access_tokens",{installation_id:s,repository_ids:t.repositoryIds,repositories:t.repositoryNames,permissions:t.permissions,mediaType:{previews:["machine-man"]},headers:{authorization:`bearer ${i.token}`}}),h=u||{},g=p||"all",m=l?l.map(e=>e.id):void 0,_=l?l.map(e=>e.name):void 0,T=new Date().toISOString();return await set(e.cache,o,{token:a,createdAt:T,expiresAt:c,repositorySelection:g,permissions:h,repositoryIds:m,repositoryNames:_,singleFileName:d}),toTokenAuthentication({installationId:s,token:a,createdAt:T,expiresAt:c,repositorySelection:g,permissions:h,repositoryIds:m,repositoryNames:_,singleFileName:d})}async function auth(e,t){switch(t.type){case"app":return getAppAuthentication(e);case"oauth":e.log.warn(new m.Deprecation('[@octokit/auth-app] {type: "oauth"} is deprecated. Use {type: "oauth-app"} instead'));case"oauth-app":return e.oauthApp({type:"oauth-app"});case"installation":return getInstallationAuthentication(e,{...t,type:"installation"});case"oauth-user":return e.oauthApp(t);default:throw Error(`Invalid auth type: ${t.type}`)}}var y=r(74708);r(58356);var E=function(e){let t=e.map(e=>e.split("/").map(e=>e.startsWith("{")?"(?:.+?)":e).join("/")),r=`^(?:${t.map(e=>`(?:${e})`).join("|")})$`;return RegExp(r,"i")}(["/app","/app/hook/config","/app/hook/deliveries","/app/hook/deliveries/{delivery_id}","/app/hook/deliveries/{delivery_id}/attempts","/app/installations","/app/installations/{installation_id}","/app/installations/{installation_id}/access_tokens","/app/installations/{installation_id}/suspended","/marketplace_listing/accounts/{account_id}","/marketplace_listing/plan","/marketplace_listing/plans","/marketplace_listing/plans/{plan_id}/accounts","/marketplace_listing/stubbed/accounts/{account_id}","/marketplace_listing/stubbed/plan","/marketplace_listing/stubbed/plans","/marketplace_listing/stubbed/plans/{plan_id}/accounts","/orgs/{org}/installation","/repos/{owner}/{repo}/installation","/users/{username}/installation"]);function requiresAppAuth(e){return!!e&&E.test(e.split("?")[0])}function isNotTimeSkewError(e){return!(e.message.match(/'Expiration time' claim \('exp'\) must be a numeric value representing the future time at which the assertion expires/)||e.message.match(/'Issued at' claim \('iat'\) must be an Integer representing the time that the assertion was issued/))}async function hook(e,t,r,s){let o=t.endpoint.merge(r,s),i=o.url;if(/\/login\/oauth\/access_token$/.test(i))return t(o);if(requiresAppAuth(i.replace(t.endpoint.DEFAULTS.baseUrl,""))){let r;let{token:s}=await getAppAuthentication(e);o.headers.authorization=`bearer ${s}`;try{r=await t(o)}catch(i){if(isNotTimeSkewError(i)||void 0===i.response.headers.date)throw i;let r=Math.floor((Date.parse(i.response.headers.date)-Date.parse(new Date().toString()))/1e3);e.log.warn(i.message),e.log.warn(`[@octokit/auth-app] GitHub API time and system time are different by ${r} seconds. Retrying request with the difference accounted for.`);let{token:s}=await getAppAuthentication({...e,timeDifference:r});return o.headers.authorization=`bearer ${s}`,t(o)}return r}if((0,y.requiresBasicAuth)(i)){let r=await e.oauthApp({type:"oauth-app"});return o.headers.authorization=r.headers.authorization,t(o)}let{token:n,createdAt:a}=await getInstallationAuthentication(e,{},t);return o.headers.authorization=`token ${n}`,sendRequestWithRetries(e,t,o,a)}async function sendRequestWithRetries(e,t,r,s,o=0){let i=+new Date-+new Date(s);try{return await t(r)}catch(a){if(401!==a.status)throw a;if(i>=5e3)throw o>0&&(a.message=`After ${o} retries within ${i/1e3}s of creating the installation access token, the response remains 401. At this point, the cause may be an authentication problem or a system outage. Please check https://www.githubstatus.com for status information`),a;++o;let n=1e3*o;return e.log.warn(`[@octokit/auth-app] Retrying after 401 response to account for token replication delay (retry: ${o}, wait: ${n/1e3}s)`),await new Promise(e=>setTimeout(e,n)),sendRequestWithRetries(e,t,r,s,o)}}var b=r(74708);function createAppAuth(e){if(!e.appId)throw Error("[@octokit/auth-app] appId option is required");if(!Number.isFinite(+e.appId))throw Error("[@octokit/auth-app] appId option must be a number or numeric string");if(!e.privateKey)throw Error("[@octokit/auth-app] privateKey option is required");if("installationId"in e&&!e.installationId)throw Error("[@octokit/auth-app] installationId is set to a falsy value");let t=Object.assign({warn:console.warn.bind(console)},e.log),r=e.request||h.request.defaults({headers:{"user-agent":`octokit-auth-app.js/6.0.4 ${(0,d.getUserAgent)()}`}}),s=Object.assign({request:r,cache:getCache()},e,e.installationId?{installationId:Number(e.installationId)}:{},{log:t,oauthApp:(0,g.createOAuthAppAuth)({clientType:"github-app",clientId:e.clientId||"",clientSecret:e.clientSecret||"",request:r})});return Object.assign(auth.bind(null,s),{hook:hook.bind(null,s)})}},93662:(e,t,r)=>{r.r(t),r.d(t,{createOAuthAppAuth:()=>createOAuthAppAuth,createOAuthUserAuth:()=>a.createOAuthUserAuth});var s=r(50102),o=r(3501),i=r(15012),n=r.n(i),a=r(74708);async function auth(e,t){if("oauth-app"===t.type)return{type:"oauth-app",clientId:e.clientId,clientSecret:e.clientSecret,clientType:e.clientType,headers:{authorization:`basic ${n()(`${e.clientId}:${e.clientSecret}`)}`}};if("factory"in t){let{type:r,...s}={...t,...e};return t.factory(s)}let r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.request,...t},s=(e.clientType,await (0,a.createOAuthUserAuth)({...r,clientType:e.clientType}));return s()}var c=r(97889);async function hook(e,t,r,s){let o=t.endpoint.merge(r,s);if(/\/login\/(oauth\/access_token|device\/code)$/.test(o.url))return t(o);if("github-app"===e.clientType&&!(0,c.X)(o.url))throw Error(`[@octokit/auth-oauth-app] GitHub Apps cannot use their client ID/secret for basic authentication for endpoints other than "/applications/{client_id}/**". "${o.method} ${o.url}" is not supported.`);let i=n()(`${e.clientId}:${e.clientSecret}`);o.headers.authorization=`basic ${i}`;try{return await t(o)}catch(e){if(401!==e.status)throw e;throw e.message=`[@octokit/auth-oauth-app] "${o.method} ${o.url}" does not support clientId/clientSecret basic authentication.`,e}}function createOAuthAppAuth(e){let t=Object.assign({request:o.request.defaults({headers:{"user-agent":`octokit-auth-oauth-app.js/7.0.1 ${(0,s.getUserAgent)()}`}}),clientType:"oauth-app"},e);return Object.assign(auth.bind(null,t),{hook:hook.bind(null,t)})}},74708:(e,t,r)=>{r.r(t),r.d(t,{createOAuthUserAuth:()=>createOAuthUserAuth,requiresBasicAuth:()=>_.X});var s=r(50102),o=r(3501);let i="4.0.1";var n=r(15799),a=r(64336);async function getOAuthAccessToken(e,t){let r=getCachedAuthentication(e,t.auth);if(r)return r;let{data:s}=await (0,n.T)({clientType:e.clientType,clientId:e.clientId,request:t.request||e.request,scopes:t.auth.scopes||e.scopes});await e.onVerification(s);let o=await waitForAccessToken(t.request||e.request,e.clientId,e.clientType,s);return e.authentication=o,o}function getCachedAuthentication(e,t){if(!0===t.refresh||!e.authentication)return!1;if("github-app"===e.clientType)return e.authentication;let r=e.authentication,s=("scopes"in t&&t.scopes||e.scopes).join(" "),o=r.scopes.join(" ");return s===o&&r}async function wait(e){await new Promise(t=>setTimeout(t,1e3*e))}async function waitForAccessToken(e,t,r,s){try{let o={clientId:t,request:e,code:s.device_code},{authentication:i}="oauth-app"===r?await (0,a.i)({...o,clientType:"oauth-app"}):await (0,a.i)({...o,clientType:"github-app"});return{type:"token",tokenType:"oauth",...i}}catch(i){if(!i.response)throw i;let o=i.response.data.error;if("authorization_pending"===o)return await wait(s.interval),waitForAccessToken(e,t,r,s);if("slow_down"===o)return await wait(s.interval+5),waitForAccessToken(e,t,r,s);throw i}}async function auth(e,t){return getOAuthAccessToken(e,{auth:t})}async function hook(e,t,r,s){let o=t.endpoint.merge(r,s);if(/\/login\/(oauth\/access_token|device\/code)$/.test(o.url))return t(o);let{token:i}=await getOAuthAccessToken(e,{request:t,auth:{type:"oauth"}});return o.headers.authorization=`token ${i}`,t(o)}function createOAuthDeviceAuth(e){let t=e.request||o.request.defaults({headers:{"user-agent":`octokit-auth-oauth-device.js/6.0.1 ${(0,s.getUserAgent)()}`}}),{request:r=t,...i}=e,n="github-app"===e.clientType?{...i,clientType:"github-app",request:r}:{...i,clientType:"oauth-app",request:r,scopes:e.scopes||[]};if(!e.clientId)throw Error('[@octokit/auth-oauth-device] "clientId" option must be set (https://github.com/octokit/auth-oauth-device.js#usage)');if(!e.onVerification)throw Error('[@octokit/auth-oauth-device] "onVerification" option must be a function (https://github.com/octokit/auth-oauth-device.js#usage)');return Object.assign(auth.bind(null,n),{hook:hook.bind(null,n)})}var c=r(14231);async function getAuthentication(e){if("code"in e.strategyOptions){let{authentication:t}=await (0,c.y)({clientId:e.clientId,clientSecret:e.clientSecret,clientType:e.clientType,onTokenCreated:e.onTokenCreated,...e.strategyOptions,request:e.request});return{type:"token",tokenType:"oauth",...t}}if("onVerification"in e.strategyOptions){let t=createOAuthDeviceAuth({clientType:e.clientType,clientId:e.clientId,onTokenCreated:e.onTokenCreated,...e.strategyOptions,request:e.request}),r=await t({type:"oauth"});return{clientSecret:e.clientSecret,...r}}if("token"in e.strategyOptions)return{type:"token",tokenType:"oauth",clientId:e.clientId,clientSecret:e.clientSecret,clientType:e.clientType,onTokenCreated:e.onTokenCreated,...e.strategyOptions};throw Error("[@octokit/auth-oauth-user] Invalid strategy options")}var l=r(13537),u=r(31057),p=r(62952),d=r(92935),h=r(81080);async function auth_auth(e,t={}){if(e.authentication||(e.authentication=(e.clientType,await getAuthentication(e))),e.authentication.invalid)throw Error("[@octokit/auth-oauth-user] Token is invalid");let r=e.authentication;if("expiresAt"in r&&("refresh"===t.type||new Date(r.expiresAt)<new Date)){let{authentication:t}=await (0,l.g)({clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,refreshToken:r.refreshToken,request:e.request});e.authentication={tokenType:"oauth",type:"token",...t}}if("refresh"===t.type){if("oauth-app"===e.clientType)throw Error("[@octokit/auth-oauth-user] OAuth Apps do not support expiring tokens");if(!r.hasOwnProperty("expiresAt"))throw Error("[@octokit/auth-oauth-user] Refresh token missing");await e.onTokenCreated?.(e.authentication,{type:t.type})}if("check"===t.type||"reset"===t.type){let r="check"===t.type?u.a:p.E;try{let{authentication:s}=await r({clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:e.authentication.token,request:e.request});return e.authentication={tokenType:"oauth",type:"token",...s},"reset"===t.type&&await e.onTokenCreated?.(e.authentication,{type:t.type}),e.authentication}catch(t){throw 404===t.status&&(t.message="[@octokit/auth-oauth-user] Token is invalid",e.authentication.invalid=!0),t}}if("delete"===t.type||"deleteAuthorization"===t.type){let r="delete"===t.type?d.p:h.s;try{await r({clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:e.authentication.token,request:e.request})}catch(e){if(404!==e.status)throw e}e.authentication.invalid=!0}return e.authentication}var g=r(15012),m=r.n(g),_=r(97889);async function hook_hook(e,t,r,s={}){let o=t.endpoint.merge(r,s);if(/\/login\/(oauth\/access_token|device\/code)$/.test(o.url))return t(o);if((0,_.X)(o.url)){let r=m()(`${e.clientId}:${e.clientSecret}`);return o.headers.authorization=`basic ${r}`,t(o)}let{token:i}=(e.clientType,await auth_auth({...e,request:t}));return o.headers.authorization="token "+i,t(o)}function createOAuthUserAuth({clientId:e,clientSecret:t,clientType:r="oauth-app",request:n=o.request.defaults({headers:{"user-agent":`octokit-auth-oauth-app.js/${i} ${(0,s.getUserAgent)()}`}}),onTokenCreated:a,...c}){let l=Object.assign({clientType:r,clientId:e,clientSecret:t,onTokenCreated:a,strategyOptions:c,request:n});return Object.assign(auth_auth.bind(null,l),{hook:hook_hook.bind(null,l)})}createOAuthUserAuth.VERSION=i},97889:(e,t,r)=>{r.d(t,{X:()=>requiresBasicAuth});let s=/\/applications\/[^/]+\/(token|grant)s?/;function requiresBasicAuth(e){return e&&s.test(e)}},24534:(e,t,r)=>{async function auth(e){return{type:"unauthenticated",reason:e}}function isRateLimitError(e){return 403===e.status&&!!e.response&&"0"===e.response.headers["x-ratelimit-remaining"]}r.r(t),r.d(t,{createUnauthenticatedAuth:()=>createUnauthenticatedAuth});var s=/\babuse\b/i;function isAbuseLimitError(e){return 403===e.status&&s.test(e.message)}async function hook(e,t,r,s){let o=t.endpoint.merge(r,s);return t(o).catch(t=>{if(404===t.status)throw t.message=`Not found. May be due to lack of authentication. Reason: ${e}`,t;if(isRateLimitError(t))throw t.message=`API rate limit exceeded. This maybe caused by the lack of authentication. Reason: ${e}`,t;if(isAbuseLimitError(t))throw t.message=`You have triggered an abuse detection mechanism. This maybe caused by the lack of authentication. Reason: ${e}`,t;if(401===t.status)throw t.message=`Unauthorized. "${o.method} ${o.url}" failed most likely due to lack of authentication. Reason: ${e}`,t;throw t.status>=400&&t.status<500&&(t.message=t.message.replace(/\.?$/,`. May be caused by lack of authentication (${e}).`)),t})}var createUnauthenticatedAuth=function(e){if(!e||!e.reason)throw Error("[@octokit/auth-unauthenticated] No reason passed to createUnauthenticatedAuth");return Object.assign(auth.bind(null,e.reason),{hook:hook.bind(null,e.reason)})}},53140:(e,t,r)=>{r.r(t),r.d(t,{Octokit:()=>T});var s=r(50102),o=r(35603),i=r(3501);function _buildMessageForResponseErrors(e){return`Request failed due to following response errors:
`+e.errors.map(e=>` - ${e.message}`).join("\n")}var n=class extends Error{constructor(e,t,r){super(_buildMessageForResponseErrors(r)),this.request=e,this.headers=t,this.response=r,this.name="GraphqlResponseError",this.errors=r.errors,this.data=r.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},a=["method","baseUrl","url","headers","request","query","mediaType"],c=["query","method","url"],l=/\/api\/v3\/?$/;function graphql(e,t,r){if(r){if("string"==typeof t&&"query"in r)return Promise.reject(Error('[@octokit/graphql] "query" cannot be used as variable name'));for(let e in r)if(c.includes(e))return Promise.reject(Error(`[@octokit/graphql] "${e}" cannot be used as variable name`))}let s="string"==typeof t?Object.assign({query:t},r):t,o=Object.keys(s).reduce((e,t)=>(a.includes(t)?e[t]=s[t]:(e.variables||(e.variables={}),e.variables[t]=s[t]),e),{}),i=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;return l.test(i)&&(o.url=i.replace(l,"/api/graphql")),e(o).then(e=>{if(e.data.errors){let t={};for(let r of Object.keys(e.headers))t[r]=e.headers[r];throw new n(o,t,e.data)}return e.data.data})}function withDefaults(e,t){let r=e.defaults(t);return Object.assign((e,t)=>graphql(r,e,t),{defaults:withDefaults.bind(null,r),endpoint:r.endpoint})}function withCustomRequest(e){return withDefaults(e,{method:"POST",url:"/graphql"})}withDefaults(i.request,{headers:{"user-agent":`octokit-graphql.js/7.0.2 ${(0,s.getUserAgent)()}`},method:"POST",url:"/graphql"});let u=/^v1\./,p=/^ghs_/,d=/^ghu_/;async function auth(e){let t=3===e.split(/\./).length,r=u.test(e)||p.test(e),s=d.test(e);return{type:"token",token:e,tokenType:t?"app":r?"installation":s?"user-to-server":"oauth"}}function withAuthorizationPrefix(e){return 3===e.split(/\./).length?`bearer ${e}`:`token ${e}`}async function hook(e,t,r,s){let o=t.endpoint.merge(r,s);return o.headers.authorization=withAuthorizationPrefix(e),t(o)}let createTokenAuth=function(e){if(!e)throw Error("[@octokit/auth-token] No token passed to createTokenAuth");if("string"!=typeof e)throw Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return e=e.replace(/^(token|bearer) +/i,""),Object.assign(auth.bind(null,e),{hook:hook.bind(null,e)})};var h="5.1.0",noop=()=>{},g=console.warn.bind(console),m=console.error.bind(console),_=`octokit-core.js/${h} ${(0,s.getUserAgent)()}`,T=class{static{this.VERSION=h}static defaults(e){let t=class extends this{constructor(...t){let r=t[0]||{};if("function"==typeof e){super(e(r));return}super(Object.assign({},e,r,r.userAgent&&e.userAgent?{userAgent:`${r.userAgent} ${e.userAgent}`}:null))}};return t}static{this.plugins=[]}static plugin(...e){let t=this.plugins,r=class extends this{static{this.plugins=t.concat(e.filter(e=>!t.includes(e)))}};return r}constructor(e={}){let t=new o.Collection,r={baseUrl:i.request.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};if(r.headers["user-agent"]=e.userAgent?`${e.userAgent} ${_}`:_,e.baseUrl&&(r.baseUrl=e.baseUrl),e.previews&&(r.mediaType.previews=e.previews),e.timeZone&&(r.headers["time-zone"]=e.timeZone),this.request=i.request.defaults(r),this.graphql=withCustomRequest(this.request).defaults(r),this.log=Object.assign({debug:noop,info:noop,warn:g,error:m},e.log),this.hook=t,e.authStrategy){let{authStrategy:r,...s}=e,o=r(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:s},e.auth));t.wrap("request",o.hook),this.auth=o}else if(e.auth){let r=createTokenAuth(e.auth);t.wrap("request",r.hook),this.auth=r}else this.auth=async()=>({type:"unauthenticated"});let s=this.constructor;for(let t=0;t<s.plugins.length;++t)Object.assign(this,s.plugins[t](this,e))}}},25036:(e,t,r)=>{var s=Object.create,o=Object.defineProperty,i=Object.getOwnPropertyDescriptor,n=Object.getOwnPropertyNames,a=Object.getPrototypeOf,c=Object.prototype.hasOwnProperty,__copyProps=(e,t,r,s)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let a of n(t))c.call(e,a)||a===r||o(e,a,{get:()=>t[a],enumerable:!(s=i(t,a))||s.enumerable});return e},__toESM=(e,t,r)=>(r=null!=e?s(a(e)):{},__copyProps(!t&&e&&e.__esModule?r:o(r,"default",{value:e,enumerable:!0}),e)),l={};((e,t)=>{for(var r in t)o(e,r,{get:t[r],enumerable:!0})})(l,{OAuthApp:()=>G,createAWSLambdaAPIGatewayV2Handler:()=>createAWSLambdaAPIGatewayV2Handler,createNodeMiddleware:()=>createNodeMiddleware,createWebWorkerHandler:()=>createWebWorkerHandler,handleRequest:()=>handleRequest,sendNodeResponse:()=>sendResponse,unknownRouteResponse:()=>unknownRouteResponse}),e.exports=__copyProps(o({},"__esModule",{value:!0}),l);var u=r(93662),p="6.1.0";function addEventHandler(e,t,r){if(Array.isArray(t)){for(let s of t)addEventHandler(e,s,r);return}e.eventHandlers[t]||(e.eventHandlers[t]=[]),e.eventHandlers[t].push(r)}var d=r(53140),h=r(50102),g=d.Octokit.defaults({userAgent:`octokit-oauth-app.js/${p} ${(0,h.getUserAgent)()}`}),m=r(74708);async function emitEvent(e,t){let{name:r,action:s}=t;if(e.eventHandlers[`${r}.${s}`])for(let o of e.eventHandlers[`${r}.${s}`])await o(t);if(e.eventHandlers[r])for(let s of e.eventHandlers[r])await s(t)}async function getUserOctokitWithState(e,t){return e.octokit.auth({type:"oauth-user",...t,async factory(t){let r=new e.Octokit({authStrategy:m.createOAuthUserAuth,auth:t}),s=await r.auth({type:"get"});return await emitEvent(e,{name:"token",action:"created",token:s.token,scopes:s.scopes,authentication:s,octokit:r}),r}})}var _=__toESM(r(53814));function getWebFlowAuthorizationUrlWithState(e,t){let r={clientId:e.clientId,request:e.octokit.request,...t,allowSignup:e.allowSignup??t.allowSignup,redirectUrl:t.redirectUrl??e.redirectUrl,scopes:t.scopes??e.defaultScopes};return _.getWebFlowAuthorizationUrl({clientType:e.clientType,...r})}var T=__toESM(r(93662));async function createTokenWithState(e,t){let r=await e.octokit.auth({type:"oauth-user",...t});return await emitEvent(e,{name:"token",action:"created",token:r.token,scopes:r.scopes,authentication:r,octokit:new e.Octokit({authStrategy:T.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.token,scopes:r.scopes,refreshToken:r.refreshToken,expiresAt:r.expiresAt,refreshTokenExpiresAt:r.refreshTokenExpiresAt}})}),{authentication:r}}var y=__toESM(r(53814));async function checkTokenWithState(e,t){let r=await y.checkToken({clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t});return Object.assign(r.authentication,{type:"token",tokenType:"oauth"}),r}var E=__toESM(r(53814)),b=r(74708);async function resetTokenWithState(e,t){let r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t};if("oauth-app"===e.clientType){let t=await E.resetToken({clientType:"oauth-app",...r}),s=Object.assign(t.authentication,{type:"token",tokenType:"oauth"});return await emitEvent(e,{name:"token",action:"reset",token:t.authentication.token,scopes:t.authentication.scopes||void 0,authentication:s,octokit:new e.Octokit({authStrategy:b.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:t.authentication.token,scopes:t.authentication.scopes}})}),{...t,authentication:s}}let s=await E.resetToken({clientType:"github-app",...r}),o=Object.assign(s.authentication,{type:"token",tokenType:"oauth"});return await emitEvent(e,{name:"token",action:"reset",token:s.authentication.token,authentication:o,octokit:new e.Octokit({authStrategy:b.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:s.authentication.token}})}),{...s,authentication:o}}var w=__toESM(r(53814)),k=r(74708);async function refreshTokenWithState(e,t){if("oauth-app"===e.clientType)throw Error("[@octokit/oauth-app] app.refreshToken() is not supported for OAuth Apps");let r=await w.refreshToken({clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,refreshToken:t.refreshToken}),s=Object.assign(r.authentication,{type:"token",tokenType:"oauth"});return await emitEvent(e,{name:"token",action:"refreshed",token:r.authentication.token,authentication:s,octokit:new e.Octokit({authStrategy:k.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.authentication.token}})}),{...r,authentication:s}}var v=__toESM(r(53814)),A=r(74708);async function scopeTokenWithState(e,t){if("oauth-app"===e.clientType)throw Error("[@octokit/oauth-app] app.scopeToken() is not supported for OAuth Apps");let r=await v.scopeToken({clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t}),s=Object.assign(r.authentication,{type:"token",tokenType:"oauth"});return await emitEvent(e,{name:"token",action:"scoped",token:r.authentication.token,authentication:s,octokit:new e.Octokit({authStrategy:A.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.authentication.token}})}),{...r,authentication:s}}var S=__toESM(r(53814)),O=r(24534);async function deleteTokenWithState(e,t){let r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t},s="oauth-app"===e.clientType?await S.deleteToken({clientType:"oauth-app",...r}):await S.deleteToken({clientType:"github-app",...r});return await emitEvent(e,{name:"token",action:"deleted",token:t.token,octokit:new e.Octokit({authStrategy:O.createUnauthenticatedAuth,auth:{reason:'Handling "token.deleted" event. The access for the token has been revoked.'}})}),s}var P=__toESM(r(53814)),R=r(24534);async function deleteAuthorizationWithState(e,t){let r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t},s="oauth-app"===e.clientType?await P.deleteAuthorization({clientType:"oauth-app",...r}):await P.deleteAuthorization({clientType:"github-app",...r});return await emitEvent(e,{name:"token",action:"deleted",token:t.token,octokit:new e.Octokit({authStrategy:R.createUnauthenticatedAuth,auth:{reason:'Handling "token.deleted" event. The access for the token has been revoked.'}})}),await emitEvent(e,{name:"authorization",action:"deleted",token:t.token,octokit:new e.Octokit({authStrategy:R.createUnauthenticatedAuth,auth:{reason:'Handling "authorization.deleted" event. The access for the app has been revoked.'}})}),s}function unknownRouteResponse(e){return{status:404,headers:{"content-type":"application/json"},text:JSON.stringify({error:`Unknown route: ${e.method} ${e.url}`})}}async function handleRequest(e,{pathPrefix:t="/api/github/oauth"},r){let s;if("OPTIONS"===r.method)return{status:200,headers:{"access-control-allow-origin":"*","access-control-allow-methods":"*","access-control-allow-headers":"Content-Type, User-Agent, Authorization"}};let{pathname:o}=new URL(r.url,"http://localhost");if(!o.startsWith(`${t}/`))return;o=o.slice(t.length+1);let i=[r.method,o].join(" "),n={getLogin:"GET login",getCallback:"GET callback",createToken:"POST token",getToken:"GET token",patchToken:"PATCH token",patchRefreshToken:"PATCH refresh-token",scopeToken:"POST token/scoped",deleteToken:"DELETE token",deleteGrant:"DELETE grant"};if(!Object.values(n).includes(i))return unknownRouteResponse(r);try{let e=await r.text();s=e?JSON.parse(e):{}}catch(e){return{status:400,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify({error:"[@octokit/oauth-app] request error"})}}let{searchParams:a}=new URL(r.url,"http://localhost"),c=Object.fromEntries(a),l=r.headers;try{if(i===n.getLogin){let{url:t}=e.getWebFlowAuthorizationUrl({state:c.state,scopes:c.scopes?c.scopes.split(","):void 0,allowSignup:c.allowSignup?"true"===c.allowSignup:void 0,redirectUrl:c.redirectUrl});return{status:302,headers:{location:t}}}if(i===n.getCallback){if(c.error)throw Error(`[@octokit/oauth-app] ${c.error} ${c.error_description}`);if(!c.code)throw Error('[@octokit/oauth-app] "code" parameter is required');let{authentication:{token:t}}=await e.createToken({code:c.code});return{status:200,headers:{"content-type":"text/html"},text:`<h1>Token created successfully</h1>

<p>Your token is: <strong>${t}</strong>. Copy it now as it cannot be shown again.</p>`}}if(i===n.createToken){let{code:t,redirectUrl:r}=s;if(!t)throw Error('[@octokit/oauth-app] "code" parameter is required');let o=await e.createToken({code:t,redirectUrl:r});return delete o.authentication.clientSecret,{status:201,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(o)}}if(i===n.getToken){let t=l.authorization?.substr("token ".length);if(!t)throw Error('[@octokit/oauth-app] "Authorization" header is required');let r=await e.checkToken({token:t});return delete r.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(r)}}if(i===n.patchToken){let t=l.authorization?.substr("token ".length);if(!t)throw Error('[@octokit/oauth-app] "Authorization" header is required');let r=await e.resetToken({token:t});return delete r.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(r)}}if(i===n.patchRefreshToken){let t=l.authorization?.substr("token ".length);if(!t)throw Error('[@octokit/oauth-app] "Authorization" header is required');let{refreshToken:r}=s;if(!r)throw Error("[@octokit/oauth-app] refreshToken must be sent in request body");let o=await e.refreshToken({refreshToken:r});return delete o.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(o)}}if(i===n.scopeToken){let t=l.authorization?.substr("token ".length);if(!t)throw Error('[@octokit/oauth-app] "Authorization" header is required');let r=await e.scopeToken({token:t,...s});return delete r.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(r)}}if(i===n.deleteToken){let t=l.authorization?.substr("token ".length);if(!t)throw Error('[@octokit/oauth-app] "Authorization" header is required');return await e.deleteToken({token:t}),{status:204,headers:{"access-control-allow-origin":"*"}}}let t=l.authorization?.substr("token ".length);if(!t)throw Error('[@octokit/oauth-app] "Authorization" header is required');return await e.deleteAuthorization({token:t}),{status:204,headers:{"access-control-allow-origin":"*"}}}catch(e){return{status:400,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify({error:e.message})}}}function parseRequest(e){let{method:t,url:r,headers:s}=e;return{method:t,url:r,headers:s,text:async function(){let t=await new Promise((t,r)=>{let s=[];e.on("error",r).on("data",e=>s.push(e)).on("end",()=>t(Buffer.concat(s).toString()))});return t}}}function sendResponse(e,t){t.writeHead(e.status,e.headers),t.end(e.text)}function createNodeMiddleware(e,t={}){return async function(r,s,o){let i=await parseRequest(r),n=await handleRequest(e,t,i);return n?(sendResponse(n,s),!0):(o?.(),!1)}}function parseRequest2(e){let t=Object.fromEntries(e.headers.entries());return{method:e.method,url:e.url,headers:t,text:()=>e.text()}}function sendResponse2(e){return new Response(e.text,{status:e.status,headers:e.headers})}function createWebWorkerHandler(e,t={}){return async function(r){let s=await parseRequest2(r),o=await handleRequest(e,t,s);return o?sendResponse2(o):void 0}}function parseRequest3(e){let{method:t}=e.requestContext.http,r=e.rawPath,{stage:s}=e.requestContext;r.startsWith("/"+s)&&(r=r.substring(s.length+1)),e.rawQueryString&&(r+="?"+e.rawQueryString);let o=e.headers,text=async()=>e.body||"";return{method:t,url:r,headers:o,text}}function sendResponse3(e){return{statusCode:e.status,headers:e.headers,body:e.text}}function createAWSLambdaAPIGatewayV2Handler(e,t={}){return async function(r){let s=parseRequest3(r),o=await handleRequest(e,t,s);return o?sendResponse3(o):void 0}}var G=class{static{this.VERSION=p}static defaults(e){let t=class extends this{constructor(...t){super({...e,...t[0]})}};return t}constructor(e){let t=e.Octokit||g;this.type=e.clientType||"oauth-app";let r=new t({authStrategy:u.createOAuthAppAuth,auth:{clientType:this.type,clientId:e.clientId,clientSecret:e.clientSecret}}),s={clientType:this.type,clientId:e.clientId,clientSecret:e.clientSecret,defaultScopes:e.defaultScopes||[],allowSignup:e.allowSignup,baseUrl:e.baseUrl,redirectUrl:e.redirectUrl,log:e.log,Octokit:t,octokit:r,eventHandlers:{}};this.on=addEventHandler.bind(null,s),this.octokit=r,this.getUserOctokit=getUserOctokitWithState.bind(null,s),this.getWebFlowAuthorizationUrl=getWebFlowAuthorizationUrlWithState.bind(null,s),this.createToken=createTokenWithState.bind(null,s),this.checkToken=checkTokenWithState.bind(null,s),this.resetToken=resetTokenWithState.bind(null,s),this.refreshToken=refreshTokenWithState.bind(null,s),this.scopeToken=scopeTokenWithState.bind(null,s),this.deleteToken=deleteTokenWithState.bind(null,s),this.deleteAuthorization=deleteAuthorizationWithState.bind(null,s)}}},31057:(e,t,r)=>{r.d(t,{a:()=>checkToken});var s=r(3501),o=r(15012),i=r.n(o);async function checkToken(e){let t=e.request||s.request,r=await t("POST /applications/{client_id}/token",{headers:{authorization:`basic ${i()(`${e.clientId}:${e.clientSecret}`)}`},client_id:e.clientId,access_token:e.token}),o={clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:e.token,scopes:r.data.scopes};return r.data.expires_at&&(o.expiresAt=r.data.expires_at),"github-app"===e.clientType&&delete o.scopes,{...r,authentication:o}}},15799:(e,t,r)=>{r.d(t,{T:()=>createDeviceCode});var s=r(3501),o=r(49998);async function createDeviceCode(e){let t=e.request||s.request,r={client_id:e.clientId};return"scopes"in e&&Array.isArray(e.scopes)&&(r.scope=e.scopes.join(" ")),(0,o.d)(t,"POST /login/device/code",r)}},81080:(e,t,r)=>{r.d(t,{s:()=>deleteAuthorization});var s=r(3501),o=r(15012),i=r.n(o);async function deleteAuthorization(e){let t=e.request||s.request,r=i()(`${e.clientId}:${e.clientSecret}`);return t("DELETE /applications/{client_id}/grant",{headers:{authorization:`basic ${r}`},client_id:e.clientId,access_token:e.token})}},92935:(e,t,r)=>{r.d(t,{p:()=>deleteToken});var s=r(3501),o=r(15012),i=r.n(o);async function deleteToken(e){let t=e.request||s.request,r=i()(`${e.clientId}:${e.clientSecret}`);return t("DELETE /applications/{client_id}/token",{headers:{authorization:`basic ${r}`},client_id:e.clientId,access_token:e.token})}},64336:(e,t,r)=>{r.d(t,{i:()=>exchangeDeviceCode});var s=r(3501),o=r(49998);async function exchangeDeviceCode(e){let t=e.request||s.request,r=await (0,o.d)(t,"POST /login/oauth/access_token",{client_id:e.clientId,device_code:e.code,grant_type:"urn:ietf:params:oauth:grant-type:device_code"}),i={clientType:e.clientType,clientId:e.clientId,token:r.data.access_token,scopes:r.data.scope.split(/\s+/).filter(Boolean)};if("clientSecret"in e&&(i.clientSecret=e.clientSecret),"github-app"===e.clientType){if("refresh_token"in r.data){let e=new Date(r.headers.date).getTime();i.refreshToken=r.data.refresh_token,i.expiresAt=toTimestamp(e,r.data.expires_in),i.refreshTokenExpiresAt=toTimestamp(e,r.data.refresh_token_expires_in)}delete i.scopes}return{...r,authentication:i}}function toTimestamp(e,t){return new Date(e+1e3*t).toISOString()}},14231:(e,t,r)=>{r.d(t,{y:()=>exchangeWebFlowCode});var s=r(3501),o=r(49998);async function exchangeWebFlowCode(e){let t=e.request||s.request,r=await (0,o.d)(t,"POST /login/oauth/access_token",{client_id:e.clientId,client_secret:e.clientSecret,code:e.code,redirect_uri:e.redirectUrl}),i={clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.data.access_token,scopes:r.data.scope.split(/\s+/).filter(Boolean)};if("github-app"===e.clientType){if("refresh_token"in r.data){let e=new Date(r.headers.date).getTime();i.refreshToken=r.data.refresh_token,i.expiresAt=toTimestamp(e,r.data.expires_in),i.refreshTokenExpiresAt=toTimestamp(e,r.data.refresh_token_expires_in)}delete i.scopes}return{...r,authentication:i}}function toTimestamp(e,t){return new Date(e+1e3*t).toISOString()}},53814:(e,t,r)=>{r.r(t),r.d(t,{VERSION:()=>s,checkToken:()=>l.a,createDeviceCode:()=>a.T,deleteAuthorization:()=>m.s,deleteToken:()=>g.p,exchangeDeviceCode:()=>c.i,exchangeWebFlowCode:()=>n.y,getWebFlowAuthorizationUrl:()=>getWebFlowAuthorizationUrl,refreshToken:()=>u.g,resetToken:()=>h.E,scopeToken:()=>scopeToken});let s="4.0.1";function oauthAuthorizationUrl(e){let t=e.clientType||"oauth-app",r=e.baseUrl||"https://github.com",s={clientType:t,allowSignup:!1!==e.allowSignup,clientId:e.clientId,login:e.login||null,redirectUrl:e.redirectUrl||null,state:e.state||Math.random().toString(36).substr(2),url:""};if("oauth-app"===t){let t="scopes"in e?e.scopes:[];s.scopes="string"==typeof t?t.split(/[,\s]+/).filter(Boolean):t}return s.url=urlBuilderAuthorize(`${r}/login/oauth/authorize`,s),s}function urlBuilderAuthorize(e,t){let r={allowSignup:"allow_signup",clientId:"client_id",login:"login",redirectUrl:"redirect_uri",scopes:"scope",state:"state"},s=e;return Object.keys(r).filter(e=>null!==t[e]).filter(e=>"scopes"!==e||"github-app"!==t.clientType&&(!Array.isArray(t[e])||t[e].length>0)).map(e=>[r[e],`${t[e]}`]).forEach(([e,t],r)=>{s+=(0===r?"?":"&")+`${e}=${encodeURIComponent(t)}`}),s}var o=r(3501),i=r(49998);function getWebFlowAuthorizationUrl({request:e=o.request,...t}){let r=(0,i.l)(e);return oauthAuthorizationUrl({...t,baseUrl:r})}var n=r(14231),a=r(15799),c=r(64336),l=r(31057),u=r(13537),p=r(15012),d=r.n(p);async function scopeToken(e){let{request:t,clientType:r,clientId:s,clientSecret:i,token:n,...a}=e,c=t||o.request,l=await c("POST /applications/{client_id}/token/scoped",{headers:{authorization:`basic ${d()(`${s}:${i}`)}`},client_id:s,access_token:n,...a}),u=Object.assign({clientType:r,clientId:s,clientSecret:i,token:l.data.token},l.data.expires_at?{expiresAt:l.data.expires_at}:{});return{...l,authentication:u}}var h=r(62952),g=r(92935),m=r(81080)},13537:(e,t,r)=>{r.d(t,{g:()=>refreshToken});var s=r(3501),o=r(49998);async function refreshToken(e){let t=e.request||s.request,r=await (0,o.d)(t,"POST /login/oauth/access_token",{client_id:e.clientId,client_secret:e.clientSecret,grant_type:"refresh_token",refresh_token:e.refreshToken}),i=new Date(r.headers.date).getTime(),n={clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,token:r.data.access_token,refreshToken:r.data.refresh_token,expiresAt:toTimestamp(i,r.data.expires_in),refreshTokenExpiresAt:toTimestamp(i,r.data.refresh_token_expires_in)};return{...r,authentication:n}}function toTimestamp(e,t){return new Date(e+1e3*t).toISOString()}},62952:(e,t,r)=>{r.d(t,{E:()=>resetToken});var s=r(3501),o=r(15012),i=r.n(o);async function resetToken(e){let t=e.request||s.request,r=i()(`${e.clientId}:${e.clientSecret}`),o=await t("PATCH /applications/{client_id}/token",{headers:{authorization:`basic ${r}`},client_id:e.clientId,access_token:e.token}),n={clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:o.data.token,scopes:o.data.scopes};return o.data.expires_at&&(n.expiresAt=o.data.expires_at),"github-app"===e.clientType&&delete n.scopes,{...o,authentication:n}}},49998:(e,t,r)=>{r.d(t,{d:()=>oauthRequest,l:()=>requestToOAuthBaseUrl});var s=r(58356);function requestToOAuthBaseUrl(e){let t=e.endpoint.DEFAULTS;return/^https:\/\/(api\.)?github\.com$/.test(t.baseUrl)?"https://github.com":t.baseUrl.replace("/api/v3","")}async function oauthRequest(e,t,r){let o={baseUrl:requestToOAuthBaseUrl(e),headers:{accept:"application/json"},...r},i=await e(t,o);if("error"in i.data){let r=new s.RequestError(`${i.data.error_description} (${i.data.error}, ${i.data.error_uri})`,400,{request:e.endpoint.merge(t,o),headers:i.headers});throw r.response=i,r}return i}},58356:(e,t,r)=>{r.r(t),r.d(t,{RequestError:()=>RequestError});var s=r(32052),o=r(68066),i=r.n(o);let n=i()(e=>console.warn(e)),a=i()(e=>console.warn(e));let RequestError=class RequestError extends Error{constructor(e,t,r){let o;super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=t,"headers"in r&&void 0!==r.headers&&(o=r.headers),"response"in r&&(this.response=r.response,o=r.response.headers);let i=Object.assign({},r.request);r.request.headers.authorization&&(i.headers=Object.assign({},r.request.headers,{authorization:r.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),i.url=i.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=i,Object.defineProperty(this,"code",{get:()=>(n(new s.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),t)}),Object.defineProperty(this,"headers",{get:()=>(a(new s.Deprecation("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.")),o||{})})}}},3501:(e,t,r)=>{function lowercaseKeys(e){return e?Object.keys(e).reduce((t,r)=>(t[r.toLowerCase()]=e[r],t),{}):{}}function isPlainObject(e){if("object"!=typeof e||null===e||"[object Object]"!==Object.prototype.toString.call(e))return!1;let t=Object.getPrototypeOf(e);if(null===t)return!0;let r=Object.prototype.hasOwnProperty.call(t,"constructor")&&t.constructor;return"function"==typeof r&&r instanceof r&&Function.prototype.call(r)===Function.prototype.call(e)}function mergeDeep(e,t){let r=Object.assign({},e);return Object.keys(t).forEach(s=>{isPlainObject(t[s])&&s in e?r[s]=mergeDeep(e[s],t[s]):Object.assign(r,{[s]:t[s]})}),r}function removeUndefinedProperties(e){for(let t in e)void 0===e[t]&&delete e[t];return e}function merge(e,t,r){if("string"==typeof t){let[e,s]=t.split(" ");r=Object.assign(s?{method:e,url:s}:{url:e},r)}else r=Object.assign({},t);r.headers=lowercaseKeys(r.headers),removeUndefinedProperties(r),removeUndefinedProperties(r.headers);let s=mergeDeep(e||{},r);return"/graphql"===r.url&&(e&&e.mediaType.previews?.length&&(s.mediaType.previews=e.mediaType.previews.filter(e=>!s.mediaType.previews.includes(e)).concat(s.mediaType.previews)),s.mediaType.previews=(s.mediaType.previews||[]).map(e=>e.replace(/-preview/,""))),s}function addQueryParameters(e,t){let r=/\?/.test(e)?"&":"?",s=Object.keys(t);return 0===s.length?e:e+r+s.map(e=>"q"===e?"q="+t.q.split("+").map(encodeURIComponent).join("+"):`${e}=${encodeURIComponent(t[e])}`).join("&")}r.r(t),r.d(t,{request:()=>c});let s=/\{[^}]+\}/g;function removeNonChars(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function extractUrlVariableNames(e){let t=e.match(s);return t?t.map(removeNonChars).reduce((e,t)=>e.concat(t),[]):[]}function omit(e,t){let r={__proto__:null};for(let s of Object.keys(e))-1===t.indexOf(s)&&(r[s]=e[s]);return r}function encodeReserved(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(e){return/%[0-9A-Fa-f]/.test(e)||(e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")),e}).join("")}function encodeUnreserved(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function encodeValue(e,t,r){return(t="+"===e||"#"===e?encodeReserved(t):encodeUnreserved(t),r)?encodeUnreserved(r)+"="+t:t}function isDefined(e){return null!=e}function isKeyOperator(e){return";"===e||"&"===e||"?"===e}function getValues(e,t,r,s){var o=e[r],i=[];if(isDefined(o)&&""!==o){if("string"==typeof o||"number"==typeof o||"boolean"==typeof o)o=o.toString(),s&&"*"!==s&&(o=o.substring(0,parseInt(s,10))),i.push(encodeValue(t,o,isKeyOperator(t)?r:""));else if("*"===s)Array.isArray(o)?o.filter(isDefined).forEach(function(e){i.push(encodeValue(t,e,isKeyOperator(t)?r:""))}):Object.keys(o).forEach(function(e){isDefined(o[e])&&i.push(encodeValue(t,o[e],e))});else{let e=[];Array.isArray(o)?o.filter(isDefined).forEach(function(r){e.push(encodeValue(t,r))}):Object.keys(o).forEach(function(r){isDefined(o[r])&&(e.push(encodeUnreserved(r)),e.push(encodeValue(t,o[r].toString())))}),isKeyOperator(t)?i.push(encodeUnreserved(r)+"="+e.join(",")):0!==e.length&&i.push(e.join(","))}}else";"===t?isDefined(o)&&i.push(encodeUnreserved(r)):""===o&&("&"===t||"?"===t)?i.push(encodeUnreserved(r)+"="):""===o&&i.push("");return i}function parseUrl(e){return{expand:expand.bind(null,e)}}function expand(e,t){var r=["+","#",".","/",";","?","&"];return"/"===(e=e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(e,s,o){if(!s)return encodeReserved(o);{let e="",o=[];if(-1!==r.indexOf(s.charAt(0))&&(e=s.charAt(0),s=s.substr(1)),s.split(/,/g).forEach(function(r){var s=/([^:\*]*)(?::(\d+)|(\*))?/.exec(r);o.push(getValues(t,e,s[1],s[2]||s[3]))}),!e||"+"===e)return o.join(",");var i=",";return"?"===e?i="&":"#"!==e&&(i=e),(0!==o.length?e:"")+o.join(i)}}))?e:e.replace(/\/$/,"")}function parse(e){let t,r=e.method.toUpperCase(),s=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),o=Object.assign({},e.headers),i=omit(e,["method","baseUrl","url","headers","request","mediaType"]),n=extractUrlVariableNames(s);s=parseUrl(s).expand(i),/^http/.test(s)||(s=e.baseUrl+s);let a=Object.keys(e).filter(e=>n.includes(e)).concat("baseUrl"),c=omit(i,a),l=/application\/octet-stream/i.test(o.accept);if(!l&&(e.mediaType.format&&(o.accept=o.accept.split(/,/).map(t=>t.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),s.endsWith("/graphql")&&e.mediaType.previews?.length)){let t=o.accept.match(/[\w-]+(?=-preview)/g)||[];o.accept=t.concat(e.mediaType.previews).map(t=>{let r=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${t}-preview${r}`}).join(",")}return["GET","HEAD"].includes(r)?s=addQueryParameters(s,c):"data"in c?t=c.data:Object.keys(c).length&&(t=c),o["content-type"]||void 0===t||(o["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(r)&&void 0===t&&(t=""),Object.assign({method:r,url:s,headers:o},void 0!==t?{body:t}:null,e.request?{request:e.request}:null)}function endpointWithDefaults(e,t,r){return parse(merge(e,t,r))}function withDefaults(e,t){let r=merge(e,t),s=endpointWithDefaults.bind(null,r);return Object.assign(s,{DEFAULTS:r,defaults:withDefaults.bind(null,r),merge:merge.bind(null,r),parse:parse})}var o=r(50102);let i=`octokit-endpoint.js/9.0.4 ${(0,o.getUserAgent)()}`,n=withDefaults(null,{method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":i},mediaType:{format:""}});function is_plain_object_isPlainObject(e){if("object"!=typeof e||null===e||"[object Object]"!==Object.prototype.toString.call(e))return!1;let t=Object.getPrototypeOf(e);if(null===t)return!0;let r=Object.prototype.hasOwnProperty.call(t,"constructor")&&t.constructor;return"function"==typeof r&&r instanceof r&&Function.prototype.call(r)===Function.prototype.call(e)}var a=r(58356);function getBufferResponse(e){return e.arrayBuffer()}function fetchWrapper(e){let t,r;let s=e.request&&e.request.log?e.request.log:console,o=e.request?.parseSuccessResponseBody!==!1;(is_plain_object_isPlainObject(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let i={},{fetch:n}=globalThis;if(e.request?.fetch&&(n=e.request.fetch),!n)throw Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");return n(e.url,{method:e.method,body:e.body,headers:e.headers,signal:e.request?.signal,...e.body&&{duplex:"half"}}).then(async n=>{for(let e of(r=n.url,t=n.status,n.headers))i[e[0]]=e[1];if("deprecation"in i){let t=i.link&&i.link.match(/<([^>]+)>; rel="deprecation"/),r=t&&t.pop();s.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${i.sunset}${r?`. See ${r}`:""}`)}if(204!==t&&205!==t){if("HEAD"===e.method){if(t<400)return;throw new a.RequestError(n.statusText,t,{response:{url:r,status:t,headers:i,data:void 0},request:e})}if(304===t)throw new a.RequestError("Not modified",t,{response:{url:r,status:t,headers:i,data:await getResponseData(n)},request:e});if(t>=400){let s=await getResponseData(n),o=new a.RequestError(toErrorMessage(s),t,{response:{url:r,status:t,headers:i,data:s},request:e});throw o}return o?await getResponseData(n):n.body}}).then(e=>({status:t,url:r,headers:i,data:e})).catch(t=>{if(t instanceof a.RequestError||"AbortError"===t.name)throw t;let r=t.message;throw"TypeError"===t.name&&"cause"in t&&(t.cause instanceof Error?r=t.cause.message:"string"==typeof t.cause&&(r=t.cause)),new a.RequestError(r,500,{request:e})})}async function getResponseData(e){let t=e.headers.get("content-type");return/application\/json/.test(t)?e.json().catch(()=>e.text()).catch(()=>""):!t||/^text\/|charset=utf-8$/.test(t)?e.text():getBufferResponse(e)}function toErrorMessage(e){let t;return"string"==typeof e?e:(t="documentation_url"in e?` - ${e.documentation_url}`:"","message"in e)?Array.isArray(e.errors)?`${e.message}: ${e.errors.map(JSON.stringify).join(", ")}${t}`:`${e.message}${t}`:`Unknown error: ${JSON.stringify(e)}`}function with_defaults_withDefaults(e,t){let r=e.defaults(t);return Object.assign(function(e,t){let s=r.merge(e,t);if(!s.request||!s.request.hook)return fetchWrapper(r.parse(s));let request=(e,t)=>fetchWrapper(r.parse(r.merge(e,t)));return Object.assign(request,{endpoint:r,defaults:with_defaults_withDefaults.bind(null,r)}),s.request.hook(request,s)},{endpoint:r,defaults:with_defaults_withDefaults.bind(null,r)})}let c=with_defaults_withDefaults(n,{headers:{"user-agent":`octokit-request.js/8.2.0 ${(0,o.getUserAgent)()}`}})},50124:(e,t,r)=>{let s=r(97869),o=r(49526),cleanInternalStack=e=>e.replace(/\s+at .*aggregate-error\/index.js:\d+:\d+\)?/g,"");let AggregateError=class AggregateError extends Error{constructor(e){if(!Array.isArray(e))throw TypeError(`Expected input to be an Array, got ${typeof e}`);let t=(e=[...e].map(e=>e instanceof Error?e:null!==e&&"object"==typeof e?Object.assign(Error(e.message),e):Error(e))).map(e=>"string"==typeof e.stack?cleanInternalStack(o(e.stack)):String(e)).join("\n");super(t="\n"+s(t,4)),this.name="AggregateError",Object.defineProperty(this,"_errors",{value:e})}*[Symbol.iterator](){for(let e of this._errors)yield e}};e.exports=AggregateError},35603:(e,t,r)=>{var s=r(34296),o=r(63024),i=r(14724),n=Function.bind,a=n.bind(n);function bindApi(e,t,r){var s=a(i,null).apply(null,r?[t,r]:[t]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach(function(s){var i=r?[t,s,r]:[t,s];e[s]=e.api[s]=a(o,null).apply(null,i)})}function HookSingular(){var e={registry:{}},t=s.bind(null,e,"h");return bindApi(t,e,"h"),t}function HookCollection(){var e={registry:{}},t=s.bind(null,e);return bindApi(t,e),t}var c=!1;function Hook(){return c||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),c=!0),HookCollection()}Hook.Singular=HookSingular.bind(),Hook.Collection=HookCollection.bind(),e.exports=Hook,e.exports.Hook=Hook,e.exports.Singular=Hook.Singular,e.exports.Collection=Hook.Collection},63024:e=>{e.exports=addHook;function addHook(e,t,r,s){var o=s;e.registry[r]||(e.registry[r]=[]),"before"===t&&(s=function(e,t){return Promise.resolve().then(o.bind(null,t)).then(e.bind(null,t))}),"after"===t&&(s=function(e,t){var r;return Promise.resolve().then(e.bind(null,t)).then(function(e){return o(r=e,t)}).then(function(){return r})}),"error"===t&&(s=function(e,t){return Promise.resolve().then(e.bind(null,t)).catch(function(e){return o(e,t)})}),e.registry[r].push({hook:s,orig:o})}},34296:e=>{e.exports=register;function register(e,t,r,s){if("function"!=typeof r)throw Error("method for before hook must be a function");return(s||(s={}),Array.isArray(t))?t.reverse().reduce(function(t,r){return register.bind(null,e,r,t,s)},r)():Promise.resolve().then(function(){return e.registry[t]?e.registry[t].reduce(function(e,t){return t.hook.bind(null,e,s)},r)():r(s)})}},14724:e=>{e.exports=removeHook;function removeHook(e,t,r){if(e.registry[t]){var s=e.registry[t].map(function(e){return e.orig}).indexOf(r);-1!==s&&e.registry[t].splice(s,1)}}},92079:e=>{e.exports=function(){var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function getCjsExportFromNamespace(e){return e&&e.default||e}var t={load:function(e,t,r={}){var s,o,i;for(s in t)i=t[s],r[s]=null!=(o=e[s])?o:i;return r},overwrite:function(e,t,r={}){var s,o;for(s in e)o=e[s],void 0!==t[s]&&(r[s]=o);return r}};o=class{constructor(e,t){this.incr=e,this.decr=t,this._first=null,this._last=null,this.length=0}push(e){var t;this.length++,"function"==typeof this.incr&&this.incr(),t={value:e,prev:this._last,next:null},null!=this._last?(this._last.next=t,this._last=t):this._first=this._last=t}shift(){var e;return null==this._first?void 0:(this.length--,"function"==typeof this.decr&&this.decr(),e=this._first.value,null!=(this._first=this._first.next)?this._first.prev=null:this._last=null,e)}first(){if(null!=this._first)return this._first.value}getArray(){var e,t,r;for(e=this._first,r=[];null!=e;)r.push((t=e,e=e.next,t.value));return r}forEachShift(e){var t;for(t=this.shift();null!=t;)e(t),t=this.shift()}debug(){var e,t,r,s,o;for(e=this._first,o=[];null!=e;)o.push((t=e,e=e.next,{value:t.value,prev:null!=(r=t.prev)?r.value:void 0,next:null!=(s=t.next)?s.value:void 0}));return o}},i=class{constructor(e){if(this.instance=e,this._events={},null!=this.instance.on||null!=this.instance.once||null!=this.instance.removeAllListeners)throw Error("An Emitter already exists for this object");this.instance.on=(e,t)=>this._addListener(e,"many",t),this.instance.once=(e,t)=>this._addListener(e,"once",t),this.instance.removeAllListeners=(e=null)=>null!=e?delete this._events[e]:this._events={}}_addListener(e,t,r){var s;return null==(s=this._events)[e]&&(s[e]=[]),this._events[e].push({cb:r,status:t}),this.instance}listenerCount(e){return null!=this._events[e]?this._events[e].length:0}async trigger(e,...t){var r;try{if("debug"!==e&&this.trigger("debug",`Event triggered: ${e}`,t),null==this._events[e])return;return this._events[e]=this._events[e].filter(function(e){return"none"!==e.status}),r=this._events[e].map(async e=>{var r;if("none"!==e.status){"once"===e.status&&(e.status="none");try{if(r="function"==typeof e.cb?e.cb(...t):void 0,"function"==typeof(null!=r?r.then:void 0))return await r;return r}catch(e){return this.trigger("error",e),null}}}),(await Promise.all(r)).find(function(e){return null!=e})}catch(e){return this.trigger("error",e),null}}},n=class{constructor(e){this.Events=new i(this),this._length=0,this._lists=(function(){var t,r;for(r=[],t=1;1<=e?t<=e:t>=e;1<=e?++t:--t)r.push(new o(()=>this.incr(),()=>this.decr()));return r}).call(this)}incr(){if(0==this._length++)return this.Events.trigger("leftzero")}decr(){if(0==--this._length)return this.Events.trigger("zero")}push(e){return this._lists[e.options.priority].push(e)}queued(e){return null!=e?this._lists[e].length:this._length}shiftAll(e){return this._lists.forEach(function(t){return t.forEachShift(e)})}getFirst(e=this._lists){var t,r,s;for(t=0,r=e.length;t<r;t++)if((s=e[t]).length>0)return s;return[]}shiftLastFrom(e){return this.getFirst(this._lists.slice(e).reverse()).shift()}},a=class extends Error{},c=class{constructor(e,r,s,o,i,n,a,c){this.task=e,this.args=r,this.rejectOnDrop=i,this.Events=n,this._states=a,this.Promise=c,this.options=t.load(s,o),this.options.priority=this._sanitizePriority(this.options.priority),this.options.id===o.id&&(this.options.id=`${this.options.id}-${this._randomIndex()}`),this.promise=new this.Promise((e,t)=>{this._resolve=e,this._reject=t}),this.retryCount=0}_sanitizePriority(e){var t;return(t=~~e!==e?5:e)<0?0:t>9?9:t}_randomIndex(){return Math.random().toString(36).slice(2)}doDrop({error:e,message:t="This job has been dropped by Bottleneck"}={}){return!!this._states.remove(this.options.id)&&(this.rejectOnDrop&&this._reject(null!=e?e:new a(t)),this.Events.trigger("dropped",{args:this.args,options:this.options,task:this.task,promise:this.promise}),!0)}_assertStatus(e){var t;if(!((t=this._states.jobStatus(this.options.id))===e||"DONE"===e&&null===t))throw new a(`Invalid job status ${t}, expected ${e}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`)}doReceive(){return this._states.start(this.options.id),this.Events.trigger("received",{args:this.args,options:this.options})}doQueue(e,t){return this._assertStatus("RECEIVED"),this._states.next(this.options.id),this.Events.trigger("queued",{args:this.args,options:this.options,reachedHWM:e,blocked:t})}doRun(){return 0===this.retryCount?(this._assertStatus("QUEUED"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),this.Events.trigger("scheduled",{args:this.args,options:this.options})}async doExecute(e,t,r,s){var o,i;0===this.retryCount?(this._assertStatus("RUNNING"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),o={args:this.args,options:this.options,retryCount:this.retryCount},this.Events.trigger("executing",o);try{if(i=await (null!=e?e.schedule(this.options,this.task,...this.args):this.task(...this.args)),t())return this.doDone(o),await s(this.options,o),this._assertStatus("DONE"),this._resolve(i)}catch(e){return this._onFailure(e,o,t,r,s)}}doExpire(e,t,r){var s,o;return this._states.jobStatus("RUNNING"===this.options.id)&&this._states.next(this.options.id),this._assertStatus("EXECUTING"),o={args:this.args,options:this.options,retryCount:this.retryCount},s=new a(`This job timed out after ${this.options.expiration} ms.`),this._onFailure(s,o,e,t,r)}async _onFailure(e,t,r,s,o){var i,n;if(r())return null!=(i=await this.Events.trigger("failed",e,t))?(n=~~i,this.Events.trigger("retry",`Retrying ${this.options.id} after ${n} ms`,t),this.retryCount++,s(n)):(this.doDone(t),await o(this.options,t),this._assertStatus("DONE"),this._reject(e))}doDone(e){return this._assertStatus("EXECUTING"),this._states.next(this.options.id),this.Events.trigger("done",e)}},l=class{constructor(e,r,s){this.instance=e,this.storeOptions=r,this.clientId=this.instance._randomIndex(),t.load(s,s,this),this._nextRequest=this._lastReservoirRefresh=this._lastReservoirIncrease=Date.now(),this._running=0,this._done=0,this._unblockTime=0,this.ready=this.Promise.resolve(),this.clients={},this._startHeartbeat()}_startHeartbeat(){var e;return null==this.heartbeat&&(null!=this.storeOptions.reservoirRefreshInterval&&null!=this.storeOptions.reservoirRefreshAmount||null!=this.storeOptions.reservoirIncreaseInterval&&null!=this.storeOptions.reservoirIncreaseAmount)?"function"==typeof(e=this.heartbeat=setInterval(()=>{var e,t,r,s,o;if(s=Date.now(),null!=this.storeOptions.reservoirRefreshInterval&&s>=this._lastReservoirRefresh+this.storeOptions.reservoirRefreshInterval&&(this._lastReservoirRefresh=s,this.storeOptions.reservoir=this.storeOptions.reservoirRefreshAmount,this.instance._drainAll(this.computeCapacity())),null!=this.storeOptions.reservoirIncreaseInterval&&s>=this._lastReservoirIncrease+this.storeOptions.reservoirIncreaseInterval&&({reservoirIncreaseAmount:e,reservoirIncreaseMaximum:r,reservoir:o}=this.storeOptions,this._lastReservoirIncrease=s,(t=null!=r?Math.min(e,r-o):e)>0))return this.storeOptions.reservoir+=t,this.instance._drainAll(this.computeCapacity())},this.heartbeatInterval)).unref?e.unref():void 0:clearInterval(this.heartbeat)}async __publish__(e){return await this.yieldLoop(),this.instance.Events.trigger("message",e.toString())}async __disconnect__(e){return await this.yieldLoop(),clearInterval(this.heartbeat),this.Promise.resolve()}yieldLoop(e=0){return new this.Promise(function(t,r){return setTimeout(t,e)})}computePenalty(){var e;return null!=(e=this.storeOptions.penalty)?e:15*this.storeOptions.minTime||5e3}async __updateSettings__(e){return await this.yieldLoop(),t.overwrite(e,e,this.storeOptions),this._startHeartbeat(),this.instance._drainAll(this.computeCapacity()),!0}async __running__(){return await this.yieldLoop(),this._running}async __queued__(){return await this.yieldLoop(),this.instance.queued()}async __done__(){return await this.yieldLoop(),this._done}async __groupCheck__(e){return await this.yieldLoop(),this._nextRequest+this.timeout<e}computeCapacity(){var e,t;return({maxConcurrent:e,reservoir:t}=this.storeOptions,null!=e&&null!=t)?Math.min(e-this._running,t):null!=e?e-this._running:null!=t?t:null}conditionsCheck(e){var t;return null==(t=this.computeCapacity())||e<=t}async __incrementReservoir__(e){var t;return await this.yieldLoop(),t=this.storeOptions.reservoir+=e,this.instance._drainAll(this.computeCapacity()),t}async __currentReservoir__(){return await this.yieldLoop(),this.storeOptions.reservoir}isBlocked(e){return this._unblockTime>=e}check(e,t){return this.conditionsCheck(e)&&this._nextRequest-t<=0}async __check__(e){var t;return await this.yieldLoop(),t=Date.now(),this.check(e,t)}async __register__(e,t,r){var s,o;return(await this.yieldLoop(),s=Date.now(),this.conditionsCheck(t))?(this._running+=t,null!=this.storeOptions.reservoir&&(this.storeOptions.reservoir-=t),o=Math.max(this._nextRequest-s,0),this._nextRequest=s+o+this.storeOptions.minTime,{success:!0,wait:o,reservoir:this.storeOptions.reservoir}):{success:!1}}strategyIsBlock(){return 3===this.storeOptions.strategy}async __submit__(e,t){var r,s,o;if(await this.yieldLoop(),null!=this.storeOptions.maxConcurrent&&t>this.storeOptions.maxConcurrent)throw new a(`Impossible to add a job having a weight of ${t} to a limiter having a maxConcurrent setting of ${this.storeOptions.maxConcurrent}`);return s=Date.now(),o=null!=this.storeOptions.highWater&&e===this.storeOptions.highWater&&!this.check(t,s),(r=this.strategyIsBlock()&&(o||this.isBlocked(s)))&&(this._unblockTime=s+this.computePenalty(),this._nextRequest=this._unblockTime+this.storeOptions.minTime,this.instance._dropAllQueued()),{reachedHWM:o,blocked:r,strategy:this.storeOptions.strategy}}async __free__(e,t){return await this.yieldLoop(),this._running-=t,this._done+=t,this.instance._drainAll(this.computeCapacity()),{running:this._running}}},u=class{constructor(e){this.status=e,this._jobs={},this.counts=this.status.map(function(){return 0})}next(e){var t,r;return(r=(t=this._jobs[e])+1,null!=t&&r<this.status.length)?(this.counts[t]--,this.counts[r]++,this._jobs[e]++):null!=t?(this.counts[t]--,delete this._jobs[e]):void 0}start(e){return this._jobs[e]=0,this.counts[0]++}remove(e){var t;return null!=(t=this._jobs[e])&&(this.counts[t]--,delete this._jobs[e]),null!=t}jobStatus(e){var t;return null!=(t=this.status[this._jobs[e]])?t:null}statusJobs(e){var t,r,s,o;if(null==e)return Object.keys(this._jobs);if((r=this.status.indexOf(e))<0)throw new a(`status must be one of ${this.status.join(", ")}`);for(t in s=this._jobs,o=[],s)s[t]===r&&o.push(t);return o}statusCounts(){return this.counts.reduce((e,t,r)=>(e[this.status[r]]=t,e),{})}},p=class{constructor(e,t){this.schedule=this.schedule.bind(this),this.name=e,this.Promise=t,this._running=0,this._queue=new o}isEmpty(){return 0===this._queue.length}async _tryToRun(){var e,t,r,s,o,i;if(this._running<1&&this._queue.length>0)return this._running++,{task:i,args:e,resolve:s,reject:r}=this._queue.shift(),t=await async function(){try{return o=await i(...e),function(){return s(o)}}catch(e){return function(){return r(e)}}}(),this._running--,this._tryToRun(),t()}schedule(e,...t){var r,s,o;return o=s=null,r=new this.Promise(function(e,t){return o=e,s=t}),this._queue.push({task:e,args:t,resolve:o,reject:s}),this._tryToRun(),r}};var r="2.19.5",s=Object.freeze({version:r,default:{version:r}}),require$$2=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),require$$3=()=>console.log("You must import the full version of Bottleneck in order to use this feature.");h=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),d=(function(){let Group=class Group{constructor(e={}){this.deleteKey=this.deleteKey.bind(this),this.limiterOptions=e,t.load(this.limiterOptions,this.defaults,this),this.Events=new i(this),this.instances={},this.Bottleneck=y,this._startAutoCleanup(),this.sharedConnection=null!=this.connection,null==this.connection&&("redis"===this.limiterOptions.datastore?this.connection=new require$$2(Object.assign({},this.limiterOptions,{Events:this.Events})):"ioredis"===this.limiterOptions.datastore&&(this.connection=new require$$3(Object.assign({},this.limiterOptions,{Events:this.Events}))))}key(e=""){var t;return null!=(t=this.instances[e])?t:(()=>{var t;return t=this.instances[e]=new this.Bottleneck(Object.assign(this.limiterOptions,{id:`${this.id}-${e}`,timeout:this.timeout,connection:this.connection})),this.Events.trigger("created",t,e),t})()}async deleteKey(e=""){var t,r;return r=this.instances[e],this.connection&&(t=await this.connection.__runCommand__(["del",...h.allKeys(`${this.id}-${e}`)])),null!=r&&(delete this.instances[e],await r.disconnect()),null!=r||t>0}limiters(){var e,t,r,s;for(e in t=this.instances,r=[],t)s=t[e],r.push({key:e,limiter:s});return r}keys(){return Object.keys(this.instances)}async clusterKeys(){var e,t,r,s,o,i,n,a;if(null==this.connection)return this.Promise.resolve(this.keys());for(o=[],e=null,a=`b_${this.id}-`.length;0!==e;)for(r=0,[n,t]=await this.connection.__runCommand__(["scan",null!=e?e:0,"match",`b_${this.id}-*_settings`,"count",1e4]),e=~~n,i=t.length;r<i;r++)s=t[r],o.push(s.slice(a,-9));return o}_startAutoCleanup(){var e;return clearInterval(this.interval),"function"==typeof(e=this.interval=setInterval(async()=>{var e,t,r,s,o;for(e in s=Date.now(),t=this.instances,r=[],t){o=t[e];try{await o._store.__groupCheck__(s)?r.push(this.deleteKey(e)):r.push(void 0)}catch(e){r.push(o.Events.trigger("error",e))}}return r},this.timeout/2)).unref?e.unref():void 0}updateSettings(e={}){if(t.overwrite(e,this.defaults,this),t.overwrite(e,e,this.limiterOptions),null!=e.timeout)return this._startAutoCleanup()}disconnect(e=!0){var t;if(!this.sharedConnection)return null!=(t=this.connection)?t.disconnect(e):void 0}};return Group.prototype.defaults={timeout:3e5,connection:null,Promise:Promise,id:"group-key"},Group}).call(e),g=(function(){let Batcher=class Batcher{constructor(e={}){this.options=e,t.load(this.options,this.defaults,this),this.Events=new i(this),this._arr=[],this._resetPromise(),this._lastFlush=Date.now()}_resetPromise(){return this._promise=new this.Promise((e,t)=>this._resolve=e)}_flush(){return clearTimeout(this._timeout),this._lastFlush=Date.now(),this._resolve(),this.Events.trigger("batch",this._arr),this._arr=[],this._resetPromise()}add(e){var t;return this._arr.push(e),t=this._promise,this._arr.length===this.maxSize?this._flush():null!=this.maxTime&&1===this._arr.length&&(this._timeout=setTimeout(()=>this._flush(),this.maxTime)),t}};return Batcher.prototype.defaults={maxTime:null,maxSize:null,Promise:Promise},Batcher}).call(e);var o,i,n,a,c,l,u,p,d,h,g,m,_=getCjsExportFromNamespace(s),T=[].splice;m=()=>console.log("You must import the full version of Bottleneck in order to use this feature.");var y=(function(){let Bottleneck=class Bottleneck{constructor(e={},...r){var s;this._addToQueue=this._addToQueue.bind(this),this._validateOptions(e,r),t.load(e,this.instanceDefaults,this),this._queues=new n(10),this._scheduled={},this._states=new u(["RECEIVED","QUEUED","RUNNING","EXECUTING"].concat(this.trackDoneStatus?["DONE"]:[])),this._limiter=null,this.Events=new i(this),this._submitLock=new p("submit",this.Promise),this._registerLock=new p("register",this.Promise),s=t.load(e,this.storeDefaults,{}),this._store=(function(){if("redis"===this.datastore||"ioredis"===this.datastore||null!=this.connection)return new m(this,s,t.load(e,this.redisStoreDefaults,{}));if("local"===this.datastore)return new l(this,s,t.load(e,this.localStoreDefaults,{}));throw new Bottleneck.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`)}).call(this),this._queues.on("leftzero",()=>{var e;return null!=(e=this._store.heartbeat)&&"function"==typeof e.ref?e.ref():void 0}),this._queues.on("zero",()=>{var e;return null!=(e=this._store.heartbeat)&&"function"==typeof e.unref?e.unref():void 0})}_validateOptions(e,t){if(!(null!=e&&"object"==typeof e&&0===t.length))throw new Bottleneck.prototype.BottleneckError("Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1.")}ready(){return this._store.ready}clients(){return this._store.clients}channel(){return`b_${this.id}`}channel_client(){return`b_${this.id}_${this._store.clientId}`}publish(e){return this._store.__publish__(e)}disconnect(e=!0){return this._store.__disconnect__(e)}chain(e){return this._limiter=e,this}queued(e){return this._queues.queued(e)}clusterQueued(){return this._store.__queued__()}empty(){return 0===this.queued()&&this._submitLock.isEmpty()}running(){return this._store.__running__()}done(){return this._store.__done__()}jobStatus(e){return this._states.jobStatus(e)}jobs(e){return this._states.statusJobs(e)}counts(){return this._states.statusCounts()}_randomIndex(){return Math.random().toString(36).slice(2)}check(e=1){return this._store.__check__(e)}_clearGlobalState(e){return null!=this._scheduled[e]&&(clearTimeout(this._scheduled[e].expiration),delete this._scheduled[e],!0)}async _free(e,t,r,s){var o;try{if({running:o}=await this._store.__free__(e,r.weight),this.Events.trigger("debug",`Freed ${r.id}`,s),0===o&&this.empty())return this.Events.trigger("idle")}catch(e){return this.Events.trigger("error",e)}}_run(e,t,r){var s,o,i;return t.doRun(),s=this._clearGlobalState.bind(this,e),i=this._run.bind(this,e,t),o=this._free.bind(this,e,t),this._scheduled[e]={timeout:setTimeout(()=>t.doExecute(this._limiter,s,i,o),r),expiration:null!=t.options.expiration?setTimeout(function(){return t.doExpire(s,i,o)},r+t.options.expiration):void 0,job:t}}_drainOne(e){return this._registerLock.schedule(()=>{var t,r,s,o,i;return 0===this.queued()?this.Promise.resolve(null):(i=this._queues.getFirst(),{options:o,args:t}=s=i.first(),null!=e&&o.weight>e)?this.Promise.resolve(null):(this.Events.trigger("debug",`Draining ${o.id}`,{args:t,options:o}),r=this._randomIndex(),this._store.__register__(r,o.weight,o.expiration).then(({success:e,wait:n,reservoir:a})=>{var c;return(this.Events.trigger("debug",`Drained ${o.id}`,{success:e,args:t,options:o}),e)?(i.shift(),(c=this.empty())&&this.Events.trigger("empty"),0===a&&this.Events.trigger("depleted",c),this._run(r,s,n),this.Promise.resolve(o.weight)):this.Promise.resolve(null)}))})}_drainAll(e,t=0){return this._drainOne(e).then(r=>{var s;return null!=r?(s=null!=e?e-r:e,this._drainAll(s,t+r)):this.Promise.resolve(t)}).catch(e=>this.Events.trigger("error",e))}_dropAllQueued(e){return this._queues.shiftAll(function(t){return t.doDrop({message:e})})}stop(e={}){var r,s;return e=t.load(e,this.stopDefaults),s=e=>{var t;return t=()=>{var t;return(t=this._states.counts)[0]+t[1]+t[2]+t[3]===e},new this.Promise((e,r)=>t()?e():this.on("done",()=>{if(t())return this.removeAllListeners("done"),e()}))},r=e.dropWaitingJobs?(this._run=function(t,r){return r.doDrop({message:e.dropErrorMessage})},this._drainOne=()=>this.Promise.resolve(null),this._registerLock.schedule(()=>this._submitLock.schedule(()=>{var t,r,o;for(t in r=this._scheduled)o=r[t],"RUNNING"===this.jobStatus(o.job.options.id)&&(clearTimeout(o.timeout),clearTimeout(o.expiration),o.job.doDrop({message:e.dropErrorMessage}));return this._dropAllQueued(e.dropErrorMessage),s(0)}))):this.schedule({priority:9,weight:0},()=>s(1)),this._receive=function(t){return t._reject(new Bottleneck.prototype.BottleneckError(e.enqueueErrorMessage))},this.stop=()=>this.Promise.reject(new Bottleneck.prototype.BottleneckError("stop() has already been called")),r}async _addToQueue(e){var t,r,s,o,i,n;({args:t,options:s}=e);try{({reachedHWM:o,blocked:r,strategy:n}=await this._store.__submit__(this.queued(),s.weight))}catch(r){return this.Events.trigger("debug",`Could not queue ${s.id}`,{args:t,options:s,error:r}),e.doDrop({error:r}),!1}return r?(e.doDrop(),!0):(o&&(null!=(i=n===Bottleneck.prototype.strategy.LEAK?this._queues.shiftLastFrom(s.priority):n===Bottleneck.prototype.strategy.OVERFLOW_PRIORITY?this._queues.shiftLastFrom(s.priority+1):n===Bottleneck.prototype.strategy.OVERFLOW?e:void 0)&&i.doDrop(),null==i||n===Bottleneck.prototype.strategy.OVERFLOW)?null==i&&e.doDrop():(e.doQueue(o,r),this._queues.push(e),await this._drainAll()),o)}_receive(e){return null!=this._states.jobStatus(e.options.id)?(e._reject(new Bottleneck.prototype.BottleneckError(`A job with the same id already exists (id=${e.options.id})`)),!1):(e.doReceive(),this._submitLock.schedule(this._addToQueue,e))}submit(...e){var r,s,o,i,n,a;return"function"==typeof e[0]?(n=e,[s,...e]=n,[r]=T.call(e,-1),i=t.load({},this.jobDefaults)):(a=e,[i,s,...e]=a,[r]=T.call(e,-1),i=t.load(i,this.jobDefaults)),(o=new c((...e)=>new this.Promise(function(t,r){return s(...e,function(...e){return(null!=e[0]?r:t)(e)})}),e,i,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise)).promise.then(function(e){return"function"==typeof r?r(...e):void 0}).catch(function(e){return Array.isArray(e)?"function"==typeof r?r(...e):void 0:"function"==typeof r?r(e):void 0}),this._receive(o)}schedule(...e){var t,r,s;return"function"==typeof e[0]?([s,...e]=e,r={}):[r,s,...e]=e,t=new c(s,e,r,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),this._receive(t),t.promise}wrap(e){var t,r;return t=this.schedule.bind(this),(r=function(...r){return t(e.bind(this),...r)}).withOptions=function(r,...s){return t(r,e,...s)},r}async updateSettings(e={}){return await this._store.__updateSettings__(t.overwrite(e,this.storeDefaults)),t.overwrite(e,this.instanceDefaults,this),this}currentReservoir(){return this._store.__currentReservoir__()}incrementReservoir(e=0){return this._store.__incrementReservoir__(e)}};return Bottleneck.default=Bottleneck,Bottleneck.Events=i,Bottleneck.version=Bottleneck.prototype.version=_.version,Bottleneck.strategy=Bottleneck.prototype.strategy={LEAK:1,OVERFLOW:2,OVERFLOW_PRIORITY:4,BLOCK:3},Bottleneck.BottleneckError=Bottleneck.prototype.BottleneckError=a,Bottleneck.Group=Bottleneck.prototype.Group=d,Bottleneck.RedisConnection=Bottleneck.prototype.RedisConnection=require$$2,Bottleneck.IORedisConnection=Bottleneck.prototype.IORedisConnection=require$$3,Bottleneck.Batcher=Bottleneck.prototype.Batcher=g,Bottleneck.prototype.jobDefaults={priority:5,weight:1,expiration:null,id:"<no-id>"},Bottleneck.prototype.storeDefaults={maxConcurrent:null,minTime:0,highWater:null,strategy:Bottleneck.prototype.strategy.LEAK,penalty:null,reservoir:null,reservoirRefreshInterval:null,reservoirRefreshAmount:null,reservoirIncreaseInterval:null,reservoirIncreaseAmount:null,reservoirIncreaseMaximum:null},Bottleneck.prototype.localStoreDefaults={Promise:Promise,timeout:null,heartbeatInterval:250},Bottleneck.prototype.redisStoreDefaults={Promise:Promise,timeout:null,heartbeatInterval:5e3,clientTimeout:1e4,Redis:null,clientOptions:{},clusterNodes:null,clearDatastore:!1,connection:null},Bottleneck.prototype.instanceDefaults={datastore:"local",connection:null,id:"<no-id>",rejectOnDrop:!0,trackDoneStatus:!1,Promise:Promise},Bottleneck.prototype.stopDefaults={enqueueErrorMessage:"This limiter has been stopped and cannot accept new jobs.",dropWaitingJobs:!0,dropErrorMessage:"This limiter has been stopped."},Bottleneck}).call(e);return y}()},15012:e=>{e.exports=function(e){return new Buffer(e).toString("base64")}},49526:(e,t,r)=>{let s=r(22037),o=/\s+at.*(?:\(|\s)(.*)\)?/,i=/^(?:(?:(?:node|(?:internal\/[\w/]*|.*node_modules\/(?:babel-polyfill|pirates)\/.*)?\w+)\.js:\d+:\d+)|native)/,n=void 0===s.homedir?"":s.homedir();e.exports=(e,t)=>(t=Object.assign({pretty:!1},t),e.replace(/\\/g,"/").split("\n").filter(e=>{let t=e.match(o);if(null===t||!t[1])return!0;let r=t[1];return!(r.includes(".app/Contents/Resources/electron.asar")||r.includes(".app/Contents/Resources/default_app.asar"))&&!i.test(r)}).filter(e=>""!==e.trim()).map(e=>t.pretty?e.replace(o,(e,t)=>e.replace(t,t.replace(n,"~"))):e).join("\n"))},32052:(e,t,r)=>{r.r(t),r.d(t,{Deprecation:()=>Deprecation});let Deprecation=class Deprecation extends Error{constructor(e){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}},97869:e=>{e.exports=(e,t=1,r)=>{if(r={indent:" ",includeEmptyLines:!1,...r},"string"!=typeof e)throw TypeError(`Expected \`input\` to be a \`string\`, got \`${typeof e}\``);if("number"!=typeof t)throw TypeError(`Expected \`count\` to be a \`number\`, got \`${typeof t}\``);if("string"!=typeof r.indent)throw TypeError(`Expected \`options.indent\` to be a \`string\`, got \`${typeof r.indent}\``);if(0===t)return e;let s=r.includeEmptyLines?/^/gm:/^(?!\s*$)/gm;return e.replace(s,r.indent.repeat(t))}},81398:(e,t,r)=>{r.d(t,{vd:()=>S});var s,o=r(53140);function normalizePaginatedListResponse(e){if(!e.data)return{...e,data:[]};let t="total_count"in e.data&&!("url"in e.data);if(!t)return e;let r=e.data.incomplete_results,s=e.data.repository_selection,o=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;let i=Object.keys(e.data)[0],n=e.data[i];return e.data=n,void 0!==r&&(e.data.incomplete_results=r),void 0!==s&&(e.data.repository_selection=s),e.data.total_count=o,e}function iterator(e,t,r){let s="function"==typeof t?t.endpoint(r):e.request.endpoint(t,r),o="function"==typeof t?t:e.request,i=s.method,n=s.headers,a=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!a)return{done:!0};try{let e=await o({method:i,url:a,headers:n}),t=normalizePaginatedListResponse(e);return a=((t.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:t}}catch(e){if(409!==e.status)throw e;return a="",{value:{status:200,headers:{},data:[]}}}}})}}function paginate(e,t,r,s){return"function"==typeof r&&(s=r,r=void 0),gather(e,[],iterator(e,t,r)[Symbol.asyncIterator](),s)}function gather(e,t,r,s){return r.next().then(o=>{if(o.done)return t;let i=!1;function done(){i=!0}return(t=t.concat(s?s(o.value,done):o.value.data),i)?t:gather(e,t,r,s)})}var i=Object.assign(paginate,{iterator});function paginateRest(e){return{paginate:Object.assign(paginate.bind(null,e),{iterator:iterator.bind(null,e)})}}paginateRest.VERSION="9.2.1";let generateMessage=(e,t)=>`The cursor at "${e.join(",")}" did not change its value "${t}" after a page transition. Please make sure your that your query is set up correctly.`;let MissingCursorChange=class MissingCursorChange extends Error{constructor(e,t){super(generateMessage(e.pathInQuery,t)),this.pageInfo=e,this.cursorValue=t,this.name="MissingCursorChangeError",Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}};let MissingPageInfo=class MissingPageInfo extends Error{constructor(e){super(`No pageInfo property found in response. Please make sure to specify the pageInfo in your query. Response-Data: ${JSON.stringify(e,null,2)}`),this.response=e,this.name="MissingPageInfo",Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}};let isObject=e=>"[object Object]"===Object.prototype.toString.call(e);function findPaginatedResourcePath(e){let t=deepFindPathToProperty(e,"pageInfo");if(0===t.length)throw new MissingPageInfo(e);return t}let deepFindPathToProperty=(e,t,r=[])=>{for(let s of Object.keys(e)){let o=[...r,s],i=e[s];if(i.hasOwnProperty(t))return o;if(isObject(i)){let e=deepFindPathToProperty(i,t,o);if(e.length>0)return e}}return[]},get=(e,t)=>t.reduce((e,t)=>e[t],e),set=(e,t,r)=>{let s=t[t.length-1],o=[...t].slice(0,-1),i=get(e,o);"function"==typeof r?i[s]=r(i[s]):i[s]=r},extractPageInfos=e=>{let t=findPaginatedResourcePath(e);return{pathInQuery:t,pageInfo:get(e,[...t,"pageInfo"])}},isForwardSearch=e=>e.hasOwnProperty("hasNextPage"),getCursorFrom=e=>isForwardSearch(e)?e.endCursor:e.startCursor,hasAnotherPage=e=>isForwardSearch(e)?e.hasNextPage:e.hasPreviousPage,createIterator=e=>(t,r={})=>{let s=!0,o={...r};return{[Symbol.asyncIterator]:()=>({async next(){if(!s)return{done:!0,value:{}};let r=await e.graphql(t,o),i=extractPageInfos(r),n=getCursorFrom(i.pageInfo);if((s=hasAnotherPage(i.pageInfo))&&n===o.cursor)throw new MissingCursorChange(i,n);return o={...o,cursor:n},{done:!1,value:r}}})}},mergeResponses=(e,t)=>{if(0===Object.keys(e).length)return Object.assign(e,t);let r=findPaginatedResourcePath(e),s=[...r,"nodes"],o=get(t,s);o&&set(e,s,e=>[...e,...o]);let i=[...r,"edges"],n=get(t,i);n&&set(e,i,e=>[...e,...n]);let a=[...r,"pageInfo"];return set(e,a,get(t,a)),e},createPaginate=e=>{let t=createIterator(e);return async(e,r={})=>{let s={};for await(let o of t(e,r))s=mergeResponses(s,o);return s}};function paginateGraphql(e){return e.graphql,{graphql:Object.assign(e.graphql,{paginate:Object.assign(createPaginate(e),{iterator:createIterator(e)})})}}let n=new Map;for(let[e,t]of Object.entries({actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repositories/{repository_id}/environments/{environment_name}/variables"],createOrUpdateEnvironmentSecret:["PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repositories/{repository_id}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repositories/{repository_id}/environments/{environment_name}/variables"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsDone:["DELETE /notifications/threads/{thread_id}"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import",{},{deprecated:"octokit.rest.migrations.cancelImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#cancel-an-import"}],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors",{},{deprecated:"octokit.rest.migrations.getCommitAuthors() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-commit-authors"}],getImportStatus:["GET /repos/{owner}/{repo}/import",{},{deprecated:"octokit.rest.migrations.getImportStatus() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-an-import-status"}],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files",{},{deprecated:"octokit.rest.migrations.getLargeFiles() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-large-files"}],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}",{},{deprecated:"octokit.rest.migrations.mapCommitAuthor() is deprecated, see https://docs.github.com/rest/migrations/source-imports#map-a-commit-author"}],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs",{},{deprecated:"octokit.rest.migrations.setLfsPreference() is deprecated, see https://docs.github.com/rest/migrations/source-imports#update-git-lfs-preference"}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import",{},{deprecated:"octokit.rest.migrations.startImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#start-an-import"}],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"],updateImport:["PATCH /repos/{owner}/{repo}/import",{},{deprecated:"octokit.rest.migrations.updateImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#update-an-import"}]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}"],assignTeamToOrgRole:["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],assignUserToOrgRole:["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createCustomOrganizationRole:["POST /orgs/{org}/organization-roles"],createInvitation:["POST /orgs/{org}/invitations"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteCustomOrganizationRole:["DELETE /orgs/{org}/organization-roles/{role_id}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}"],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getOrgRole:["GET /orgs/{org}/organization-roles/{role_id}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOrgRoleTeams:["GET /orgs/{org}/organization-roles/{role_id}/teams"],listOrgRoleUsers:["GET /orgs/{org}/organization-roles/{role_id}/users"],listOrgRoles:["GET /orgs/{org}/organization-roles"],listOrganizationFineGrainedPermissions:["GET /orgs/{org}/organization-fine-grained-permissions"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],patchCustomOrganizationRole:["PATCH /orgs/{org}/organization-roles/{role_id}"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}"],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],revokeAllOrgRolesTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],revokeAllOrgRolesUser:["DELETE /orgs/{org}/organization-roles/users/{username}"],revokeOrgRoleTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],revokeOrgRoleUser:["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],cancelPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateCustomPropertiesValues:["PATCH /repos/{owner}/{repo}/properties/values"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createTagProtection:["POST /repos/{owner}/{repo}/tags/protection"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteTagProtection:["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesDeployment:["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTagProtection:["GET /repos/{owner}/{repo}/tags/protection"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createFork:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}}))for(let[r,s]of Object.entries(t)){let[t,o,i]=s,[a,c]=t.split(/ /),l=Object.assign({method:a,url:c},o);n.has(e)||n.set(e,new Map),n.get(e).set(r,{scope:e,methodName:r,endpointDefaults:l,decorations:i})}let a={has:({scope:e},t)=>n.get(e).has(t),getOwnPropertyDescriptor(e,t){return{value:this.get(e,t),configurable:!0,writable:!0,enumerable:!0}},defineProperty:(e,t,r)=>(Object.defineProperty(e.cache,t,r),!0),deleteProperty:(e,t)=>(delete e.cache[t],!0),ownKeys:({scope:e})=>[...n.get(e).keys()],set:(e,t,r)=>e.cache[t]=r,get({octokit:e,scope:t,cache:r},s){if(r[s])return r[s];let o=n.get(t).get(s);if(!o)return;let{endpointDefaults:i,decorations:a}=o;return a?r[s]=decorate(e,t,s,i,a):r[s]=e.request.defaults(i),r[s]}};function endpointsToMethods(e){let t={};for(let r of n.keys())t[r]=new Proxy({octokit:e,scope:r,cache:{}},a);return t}function decorate(e,t,r,s,o){let i=e.request.defaults(s);return Object.assign(function(...s){let n=i.endpoint.merge(...s);if(o.mapToData)return i(n=Object.assign({},n,{data:n[o.mapToData],[o.mapToData]:void 0}));if(o.renamed){let[s,i]=o.renamed;e.log.warn(`octokit.${t}.${r}() has been renamed to octokit.${s}.${i}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){let n=i.endpoint.merge(...s);for(let[s,i]of Object.entries(o.renamedParameters))s in n&&(e.log.warn(`"${s}" parameter is deprecated for "octokit.${t}.${r}()". Use "${i}" instead`),i in n||(n[i]=n[s]),delete n[s]);return i(n)}return i(...s)},i)}function restEndpointMethods(e){let t=endpointsToMethods(e);return{rest:t}}async function errorRequest(e,t,r,s){if(!r.request||!r.request.request)throw r;if(r.status>=400&&!e.doNotRetry.includes(r.status)){let o=null!=s.request.retries?s.request.retries:e.retries,i=Math.pow((s.request.retryCount||0)+1,2);throw t.retry.retryRequest(r,o,i)}throw r}restEndpointMethods.VERSION="10.4.1";var c=r(92079),l=r.n(c),u=r(58356);async function wrapRequest(e,t,r,s){let o=new(l());return o.on("failed",function(t,r){let o=~~t.request.request.retries,i=~~t.request.request.retryAfter;if(s.request.retryCount=r.retryCount+1,o>r.retryCount)return i*e.retryAfterBaseValue}),o.schedule(requestWithGraphqlErrorHandling.bind(null,e,t,r),s)}async function requestWithGraphqlErrorHandling(e,t,r,s){let o=await r(r,s);if(o.data&&o.data.errors&&/Something went wrong while executing your query/.test(o.data.errors[0].message)){let r=new u.RequestError(o.data.errors[0].message,500,{request:s,response:o});return errorRequest(e,t,r,s)}return o}function retry(e,t){let r=Object.assign({enabled:!0,retryAfterBaseValue:1e3,doNotRetry:[400,401,403,404,422,451],retries:3},t.retry);return r.enabled&&(e.hook.error("request",errorRequest.bind(null,r,e)),e.hook.wrap("request",wrapRequest.bind(null,r,e))),{retry:{retryRequest:(e,t,r)=>(e.request.request=Object.assign({},e.request.request,{retries:t,retryAfter:r}),e)}}}retry.VERSION="0.0.0-development";let noop=()=>Promise.resolve();function wrap_request_wrapRequest(e,t,r){return e.retryLimiter.schedule(doRequest,e,t,r)}async function doRequest(e,t,r){let s="GET"!==r.method&&"HEAD"!==r.method,{pathname:o}=new URL(r.url,"http://github.test"),i="GET"===r.method&&o.startsWith("/search/"),n=o.startsWith("/graphql"),a=~~t.retryCount,c=a>0?{priority:0,weight:0}:{};e.clustering&&(c.expiration=6e4),(s||n)&&await e.write.key(e.id).schedule(c,noop),s&&e.triggersNotification(o)&&await e.notifications.key(e.id).schedule(c,noop),i&&await e.search.key(e.id).schedule(c,noop);let l=e.global.key(e.id).schedule(c,t,r);if(n){let e=await l;if(null!=e.data.errors&&e.data.errors.some(e=>"RATE_LIMITED"===e.type)){let t=Object.assign(Error("GraphQL Rate Limit Exceeded"),{response:e,data:e.data});throw t}}return l}function routeMatcher(e){let t=e.map(e=>e.split("/").map(e=>e.startsWith("{")?"(?:.+?)":e).join("/")),r=`^(?:${t.map(e=>`(?:${e})`).join("|")})[^/]*$`;return RegExp(r,"i")}let p=routeMatcher(["/orgs/{org}/invitations","/orgs/{org}/invitations/{invitation_id}","/orgs/{org}/teams/{team_slug}/discussions","/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","/repos/{owner}/{repo}/collaborators/{username}","/repos/{owner}/{repo}/commits/{commit_sha}/comments","/repos/{owner}/{repo}/issues","/repos/{owner}/{repo}/issues/{issue_number}/comments","/repos/{owner}/{repo}/pulls","/repos/{owner}/{repo}/pulls/{pull_number}/comments","/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies","/repos/{owner}/{repo}/pulls/{pull_number}/merge","/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers","/repos/{owner}/{repo}/pulls/{pull_number}/reviews","/repos/{owner}/{repo}/releases","/teams/{team_id}/discussions","/teams/{team_id}/discussions/{discussion_number}/comments"]),d=p.test.bind(p),h={},createGroups=function(e,t){h.global=new e.Group({id:"octokit-global",maxConcurrent:10,...t}),h.search=new e.Group({id:"octokit-search",maxConcurrent:1,minTime:2e3,...t}),h.write=new e.Group({id:"octokit-write",maxConcurrent:1,minTime:1e3,...t}),h.notifications=new e.Group({id:"octokit-notifications",maxConcurrent:1,minTime:3e3,...t})};function throttling(e,t){let{enabled:r=!0,Bottleneck:s=l(),id:o="no-id",timeout:i=12e4,connection:n}=t.throttle||{};if(!r)return{};null==h.global&&createGroups(s,{connection:n,timeout:i});let a=Object.assign({clustering:null!=n,triggersNotification:d,fallbackSecondaryRateRetryAfter:60,retryAfterBaseValue:1e3,retryLimiter:new s,id:o,...h},t.throttle);if("function"!=typeof a.onSecondaryRateLimit||"function"!=typeof a.onRateLimit)throw Error(`octokit/plugin-throttling error:
        You must pass the onSecondaryRateLimit and onRateLimit error handlers.
        See https://octokit.github.io/rest.js/#throttling

        const octokit = new Octokit({
          throttle: {
            onSecondaryRateLimit: (retryAfter, options) => {/* ... */},
            onRateLimit: (retryAfter, options) => {/* ... */}
          }
        })
    `);let c={},u=new s.Events(c);return c.on("secondary-limit",a.onSecondaryRateLimit),c.on("rate-limit",a.onRateLimit),c.on("error",t=>e.log.warn("Error in throttling-plugin limit handler",t)),a.retryLimiter.on("failed",async function(t,r){let[s,o,i]=r.args,{pathname:n}=new URL(i.url,"http://github.test"),a=n.startsWith("/graphql")&&401!==t.status;if(!(a||403===t.status))return;let c=~~o.retryCount;o.retryCount=c,i.request.retryCount=c;let{wantRetry:l,retryAfter:p=0}=await async function(){if(/\bsecondary rate\b/i.test(t.message)){let r=Number(t.response.headers["retry-after"])||s.fallbackSecondaryRateRetryAfter,o=await u.trigger("secondary-limit",r,i,e,c);return{wantRetry:o,retryAfter:r}}if(null!=t.response.headers&&"0"===t.response.headers["x-ratelimit-remaining"]||(t.response.data?.errors??[]).some(e=>"RATE_LIMITED"===e.type)){let r=new Date(1e3*~~t.response.headers["x-ratelimit-reset"]).getTime(),s=Math.max(Math.ceil((r-Date.now())/1e3)+1,0),o=await u.trigger("rate-limit",s,i,e,c);return{wantRetry:o,retryAfter:s}}return{}}();if(l)return o.retryCount++,p*s.retryAfterBaseValue}),e.hook.wrap("request",wrap_request_wrapRequest.bind(null,a)),{}}throttling.VERSION="8.2.0",throttling.triggersNotification=d;var g=r(74827),m=r(25036),_=r(24534);let createLogger=e=>({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console),...e}),T=["branch_protection_rule","branch_protection_rule.created","branch_protection_rule.deleted","branch_protection_rule.edited","check_run","check_run.completed","check_run.created","check_run.requested_action","check_run.rerequested","check_suite","check_suite.completed","check_suite.requested","check_suite.rerequested","code_scanning_alert","code_scanning_alert.appeared_in_branch","code_scanning_alert.closed_by_user","code_scanning_alert.created","code_scanning_alert.fixed","code_scanning_alert.reopened","code_scanning_alert.reopened_by_user","commit_comment","commit_comment.created","create","delete","dependabot_alert","dependabot_alert.created","dependabot_alert.dismissed","dependabot_alert.fixed","dependabot_alert.reintroduced","dependabot_alert.reopened","deploy_key","deploy_key.created","deploy_key.deleted","deployment","deployment.created","deployment_protection_rule","deployment_protection_rule.requested","deployment_review","deployment_review.approved","deployment_review.rejected","deployment_review.requested","deployment_status","deployment_status.created","discussion","discussion.answered","discussion.category_changed","discussion.created","discussion.deleted","discussion.edited","discussion.labeled","discussion.locked","discussion.pinned","discussion.transferred","discussion.unanswered","discussion.unlabeled","discussion.unlocked","discussion.unpinned","discussion_comment","discussion_comment.created","discussion_comment.deleted","discussion_comment.edited","fork","github_app_authorization","github_app_authorization.revoked","gollum","installation","installation.created","installation.deleted","installation.new_permissions_accepted","installation.suspend","installation.unsuspend","installation_repositories","installation_repositories.added","installation_repositories.removed","installation_target","installation_target.renamed","issue_comment","issue_comment.created","issue_comment.deleted","issue_comment.edited","issues","issues.assigned","issues.closed","issues.deleted","issues.demilestoned","issues.edited","issues.labeled","issues.locked","issues.milestoned","issues.opened","issues.pinned","issues.reopened","issues.transferred","issues.unassigned","issues.unlabeled","issues.unlocked","issues.unpinned","label","label.created","label.deleted","label.edited","marketplace_purchase","marketplace_purchase.cancelled","marketplace_purchase.changed","marketplace_purchase.pending_change","marketplace_purchase.pending_change_cancelled","marketplace_purchase.purchased","member","member.added","member.edited","member.removed","membership","membership.added","membership.removed","merge_group","merge_group.checks_requested","meta","meta.deleted","milestone","milestone.closed","milestone.created","milestone.deleted","milestone.edited","milestone.opened","org_block","org_block.blocked","org_block.unblocked","organization","organization.deleted","organization.member_added","organization.member_invited","organization.member_removed","organization.renamed","package","package.published","package.updated","page_build","ping","project","project.closed","project.created","project.deleted","project.edited","project.reopened","project_card","project_card.converted","project_card.created","project_card.deleted","project_card.edited","project_card.moved","project_column","project_column.created","project_column.deleted","project_column.edited","project_column.moved","projects_v2_item","projects_v2_item.archived","projects_v2_item.converted","projects_v2_item.created","projects_v2_item.deleted","projects_v2_item.edited","projects_v2_item.reordered","projects_v2_item.restored","public","pull_request","pull_request.assigned","pull_request.auto_merge_disabled","pull_request.auto_merge_enabled","pull_request.closed","pull_request.converted_to_draft","pull_request.demilestoned","pull_request.dequeued","pull_request.edited","pull_request.enqueued","pull_request.labeled","pull_request.locked","pull_request.milestoned","pull_request.opened","pull_request.ready_for_review","pull_request.reopened","pull_request.review_request_removed","pull_request.review_requested","pull_request.synchronize","pull_request.unassigned","pull_request.unlabeled","pull_request.unlocked","pull_request_review","pull_request_review.dismissed","pull_request_review.edited","pull_request_review.submitted","pull_request_review_comment","pull_request_review_comment.created","pull_request_review_comment.deleted","pull_request_review_comment.edited","pull_request_review_thread","pull_request_review_thread.resolved","pull_request_review_thread.unresolved","push","registry_package","registry_package.published","registry_package.updated","release","release.created","release.deleted","release.edited","release.prereleased","release.published","release.released","release.unpublished","repository","repository.archived","repository.created","repository.deleted","repository.edited","repository.privatized","repository.publicized","repository.renamed","repository.transferred","repository.unarchived","repository_dispatch","repository_import","repository_vulnerability_alert","repository_vulnerability_alert.create","repository_vulnerability_alert.dismiss","repository_vulnerability_alert.reopen","repository_vulnerability_alert.resolve","secret_scanning_alert","secret_scanning_alert.created","secret_scanning_alert.reopened","secret_scanning_alert.resolved","secret_scanning_alert.revoked","secret_scanning_alert_location","secret_scanning_alert_location.created","security_advisory","security_advisory.performed","security_advisory.published","security_advisory.updated","security_advisory.withdrawn","sponsorship","sponsorship.cancelled","sponsorship.created","sponsorship.edited","sponsorship.pending_cancellation","sponsorship.pending_tier_change","sponsorship.tier_changed","star","star.created","star.deleted","status","team","team.added_to_repository","team.created","team.deleted","team.edited","team.removed_from_repository","team_add","watch","watch.started","workflow_dispatch","workflow_job","workflow_job.completed","workflow_job.in_progress","workflow_job.queued","workflow_job.waiting","workflow_run","workflow_run.completed","workflow_run.in_progress","workflow_run.requested"];function handleEventHandlers(e,t,r){e.hooks[t]||(e.hooks[t]=[]),e.hooks[t].push(r)}function receiverOn(e,t,r){if(Array.isArray(t)){t.forEach(t=>receiverOn(e,t,r));return}if(["*","error"].includes(t)){let e="*"===t?"any":t,r=`Using the "${t}" event with the regular Webhooks.on() function is not supported. Please use the Webhooks.on${e.charAt(0).toUpperCase()+e.slice(1)}() method instead`;throw Error(r)}T.includes(t)||e.log.warn(`"${t}" is not a known webhook name (https://developer.github.com/v3/activity/events/types/)`),handleEventHandlers(e,t,r)}function receiverOnAny(e,t){handleEventHandlers(e,"*",t)}function receiverOnError(e,t){handleEventHandlers(e,"error",t)}var y=r(50124),E=r.n(y);function wrapErrorHandler(e,t){let r;try{r=e(t)}catch(e){console.log('FATAL: Error occurred in "error" event handler'),console.log(e)}r&&r.catch&&r.catch(e=>{console.log('FATAL: Error occurred in "error" event handler'),console.log(e)})}function getHooks(e,t,r){let s=[e.hooks[r],e.hooks["*"]];return t&&s.unshift(e.hooks[`${r}.${t}`]),[].concat(...s.filter(Boolean))}function receiverHandle(e,t){let r=e.hooks.error||[];if(t instanceof Error){let e=Object.assign(new(E())([t]),{event:t,errors:[t]});return r.forEach(t=>wrapErrorHandler(t,e)),Promise.reject(e)}if(!t||!t.name)throw new(E())(["Event name not passed"]);if(!t.payload)throw new(E())(["Event payload not passed"]);let s=getHooks(e,"action"in t.payload?t.payload.action:null,t.name);if(0===s.length)return Promise.resolve();let o=[],i=s.map(r=>{let s=Promise.resolve(t);return e.transform&&(s=s.then(e.transform)),s.then(e=>r(e)).catch(e=>o.push(Object.assign(e,{event:t})))});return Promise.all(i).then(()=>{if(0===o.length)return;let e=new(E())(o);throw Object.assign(e,{event:t,errors:o}),r.forEach(t=>wrapErrorHandler(t,e)),e})}function removeListener(e,t,r){if(Array.isArray(t)){t.forEach(t=>removeListener(e,t,r));return}if(e.hooks[t]){for(let s=e.hooks[t].length-1;s>=0;s--)if(e.hooks[t][s]===r){e.hooks[t].splice(s,1);return}}}function createEventHandler(e){let t={hooks:{},log:createLogger(e&&e.log)};return e&&e.transform&&(t.transform=e.transform),{on:receiverOn.bind(null,t),onAny:receiverOnAny.bind(null,t),onError:receiverOnError.bind(null,t),removeListener:removeListener.bind(null,t),receive:receiverHandle.bind(null,t)}}var b=r(6005),w=((s=w||{}).SHA1="sha1",s.SHA256="sha256",s);let k="4.1.0";async function sign(e,t){let{secret:r,algorithm:s}="object"==typeof e?{secret:e.secret,algorithm:e.algorithm||w.SHA256}:{secret:e,algorithm:w.SHA256};if(!r||!t)throw TypeError("[@octokit/webhooks-methods] secret & payload required for sign()");if("string"!=typeof t)throw TypeError("[@octokit/webhooks-methods] payload must be a string");if(!Object.values(w).includes(s))throw TypeError(`[@octokit/webhooks] Algorithm ${s} is not supported. Must be  'sha1' or 'sha256'`);return`${s}=${(0,b.createHmac)(s,r).update(t).digest("hex")}`}sign.VERSION=k;var v=r(72254);let getAlgorithm=e=>e.startsWith("sha256=")?"sha256":"sha1";async function verify(e,t,r){if(!e||!t||!r)throw TypeError("[@octokit/webhooks-methods] secret, eventPayload & signature required");if("string"!=typeof t)throw TypeError("[@octokit/webhooks-methods] eventPayload must be a string");let s=v.Buffer.from(r),o=getAlgorithm(r),i=v.Buffer.from(await sign({secret:e,algorithm:o},t));return s.length===i.length&&(0,b.timingSafeEqual)(s,i)}async function verifyAndReceive(e,t){let r;let s=await verify(e.secret,t.payload,t.signature).catch(()=>!1);if(!s){let r=Error("[@octokit/webhooks] signature does not match event payload and secret");return e.eventHandler.receive(Object.assign(r,{event:t,status:400}))}try{r=JSON.parse(t.payload)}catch(e){throw e.message="Invalid JSON",e.status=400,new(E())([e])}return e.eventHandler.receive({id:t.id,name:t.name,payload:r})}verify.VERSION=k;let Webhooks=class Webhooks{constructor(e){if(!e||!e.secret)throw Error("[@octokit/webhooks] options.secret required");let t={eventHandler:createEventHandler(e),secret:e.secret,hooks:{},log:createLogger(e.log)};this.sign=sign.bind(null,e.secret),this.verify=verify.bind(null,e.secret),this.on=t.eventHandler.on,this.onAny=t.eventHandler.onAny,this.onError=t.eventHandler.onError,this.removeListener=t.eventHandler.removeListener,this.receive=t.eventHandler.receive,this.verifyAndReceive=verifyAndReceive.bind(null,t)}};function webhooks(e,t){return new Webhooks({secret:t.secret,transform:async t=>{if(!("installation"in t.payload)||"object"!=typeof t.payload.installation){let r=new e.constructor({authStrategy:_.createUnauthenticatedAuth,auth:{reason:'"installation" key missing in webhook event payload'}});return{...t,octokit:r}}let r=t.payload.installation.id,s=await e.auth({type:"installation",installationId:r,factory:e=>new e.octokit.constructor({...e.octokitOptions,authStrategy:g.createAppAuth,auth:{...e,installationId:r}})});return s.hook.before("request",e=>{e.headers["x-github-delivery"]=t.id}),{...t,octokit:s}}})}async function getInstallationOctokit(e,t){return e.octokit.auth({type:"installation",installationId:t,factory(e){let r={...e.octokitOptions,authStrategy:g.createAppAuth,auth:{...e,installationId:t}};return new e.octokit.constructor(r)}})}function eachInstallationFactory(e){return Object.assign(eachInstallation.bind(null,e),{iterator:eachInstallationIterator.bind(null,e)})}async function eachInstallation(e,t){let r=eachInstallationIterator(e)[Symbol.asyncIterator](),s=await r.next();for(;!s.done;)await t(s.value),s=await r.next()}function eachInstallationIterator(e){return{async *[Symbol.asyncIterator](){let t=i.iterator(e.octokit,"GET /app/installations");for await(let{data:r}of t)for(let t of r){let r=await getInstallationOctokit(e,t.id);yield{octokit:r,installation:t}}}}}function eachRepositoryFactory(e){return Object.assign(eachRepository.bind(null,e),{iterator:eachRepositoryIterator.bind(null,e)})}async function eachRepository(e,t,r){let s=eachRepositoryIterator(e,r?t:void 0)[Symbol.asyncIterator](),o=await s.next();for(;!o.done;)r?await r(o.value):await t(o.value),o=await s.next()}function singleInstallationIterator(e,t){return{async *[Symbol.asyncIterator](){yield{octokit:await e.getInstallationOctokit(t)}}}}function eachRepositoryIterator(e,t){return{async *[Symbol.asyncIterator](){let r=t?singleInstallationIterator(e,t.installationId):e.eachInstallation.iterator();for await(let{octokit:e}of r){let t=i.iterator(e,"GET /installation/repositories");for await(let{data:r}of t)for(let t of r)yield{octokit:e,repository:t}}}}}var A=class{static{this.VERSION="14.0.2"}static defaults(e){let t=class extends this{constructor(...t){super({...e,...t[0]})}};return t}constructor(e){let t=e.Octokit||o.Octokit,r=Object.assign({appId:e.appId,privateKey:e.privateKey},e.oauth?{clientId:e.oauth.clientId,clientSecret:e.oauth.clientSecret}:{});this.octokit=new t({authStrategy:g.createAppAuth,auth:r,log:e.log}),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},e.log),e.webhooks?this.webhooks=webhooks(this.octokit,e.webhooks):Object.defineProperty(this,"webhooks",{get(){throw Error("[@octokit/app] webhooks option not set")}}),e.oauth?this.oauth=new m.OAuthApp({...e.oauth,clientType:"github-app",Octokit:t}):Object.defineProperty(this,"oauth",{get(){throw Error("[@octokit/app] oauth.clientId / oauth.clientSecret options are not set")}}),this.getInstallationOctokit=getInstallationOctokit.bind(null,this),this.eachInstallation=eachInstallationFactory(this),this.eachRepository=eachRepositoryFactory(this)}},S=o.Octokit.plugin(restEndpointMethods,paginateRest,paginateGraphql,retry,throttling).defaults({userAgent:"octokit.js/3.1.2",throttle:{onRateLimit,onSecondaryRateLimit}});function onRateLimit(e,t,r){if(r.log.warn(`Request quota exhausted for request ${t.method} ${t.url}`),0===t.request.retryCount)return r.log.info(`Retrying after ${e} seconds!`),!0}function onSecondaryRateLimit(e,t,r){if(r.log.warn(`SecondaryRateLimit detected for request ${t.method} ${t.url}`),0===t.request.retryCount)return r.log.info(`Retrying after ${e} seconds!`),!0}A.defaults({Octokit:S}),m.OAuthApp.defaults({Octokit:S})},68066:(e,t,r)=>{var s=r(90922);function once(e){var f=function(){return f.called?f.value:(f.called=!0,f.value=e.apply(this,arguments))};return f.called=!1,f}function onceStrict(e){var f=function(){if(f.called)throw Error(f.onceError);return f.called=!0,f.value=e.apply(this,arguments)},t=e.name||"Function wrapped with `once`";return f.onceError=t+" shouldn't be called more than once",f.called=!1,f}e.exports=s(once),e.exports.strict=s(onceStrict),once.proto=once(function(){Object.defineProperty(Function.prototype,"once",{value:function(){return once(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return onceStrict(this)},configurable:!0})})},29387:(e,t,r)=>{function string2ArrayBuffer(e){let t=new ArrayBuffer(e.length),r=new Uint8Array(t);for(let t=0,s=e.length;t<s;t++)r[t]=e.charCodeAt(t);return t}function getDERfromPEM(e){let t=e.trim().split("\n").slice(1,-1).join(""),r=atob(t);return string2ArrayBuffer(r)}function getEncodedMessage(e,t){return`${base64encodeJSON(e)}.${base64encodeJSON(t)}`}function base64encode(e){for(var t="",r=new Uint8Array(e),s=r.byteLength,o=0;o<s;o++)t+=String.fromCharCode(r[o]);return fromBase64(btoa(t))}function fromBase64(e){return e.replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function base64encodeJSON(e){return fromBase64(btoa(JSON.stringify(e)))}r.r(t),r.d(t,{githubAppJwt:()=>githubAppJwt});let getToken=async({privateKey:e,payload:t})=>{if(/BEGIN RSA PRIVATE KEY/.test(e))throw Error("[universal-github-app-jwt] Private Key is in PKCS#1 format, but only PKCS#8 is supported. See https://github.com/gr2m/universal-github-app-jwt#readme");let r={name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},s=getDERfromPEM(e),o=await crypto.subtle.importKey("pkcs8",s,r,!1,["sign"]),i=getEncodedMessage({alg:"RS256",typ:"JWT"},t),n=string2ArrayBuffer(i),a=await crypto.subtle.sign(r.name,o,n),c=base64encode(a);return`${i}.${c}`};async function githubAppJwt({id:e,privateKey:t,now:r=Math.floor(Date.now()/1e3)}){let s=r-30,o=s+600,i=await getToken({privateKey:t,payload:{iat:s,exp:o,iss:e}});return{appId:e,expiration:o,token:i}}},50102:(e,t,r)=>{function getUserAgent(){return"object"==typeof navigator&&"userAgent"in navigator?navigator.userAgent:"object"==typeof process&&void 0!==process.version?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}r.r(t),r.d(t,{getUserAgent:()=>getUserAgent})},90922:e=>{e.exports=wrappy;function wrappy(e,t){if(e&&t)return wrappy(e)(t);if("function"!=typeof e)throw TypeError("need wrapper function");return Object.keys(e).forEach(function(t){wrapper[t]=e[t]}),wrapper;function wrapper(){for(var t=Array(arguments.length),r=0;r<t.length;r++)t[r]=arguments[r];var s=e.apply(this,t),o=t[t.length-1];return"function"==typeof s&&s!==o&&Object.keys(o).forEach(function(e){s[e]=o[e]}),s}}},49743:(e,t)=>{let r;Object.defineProperty(t,"__esModule",{value:!0}),t.LRUCache=void 0;let s="object"==typeof performance&&performance&&"function"==typeof performance.now?performance:Date,o=new Set,i="object"==typeof process&&process?process:{},emitWarning=(e,t,r,s)=>{"function"==typeof i.emitWarning?i.emitWarning(e,t,r,s):console.error(`[${r}] ${t}: ${e}`)},n=globalThis.AbortController,a=globalThis.AbortSignal;if(void 0===n){a=class{addEventListener(e,t){this._onabort.push(t)}constructor(){this._onabort=[],this.aborted=!1}},n=class{constructor(){this.signal=new a,warnACPolyfill()}abort(e){if(!this.signal.aborted){for(let t of(this.signal.reason=e,this.signal.aborted=!0,this.signal._onabort))t(e);this.signal.onabort?.(e)}}};let e=i.env?.LRU_CACHE_IGNORE_AC_WARNING!=="1",warnACPolyfill=()=>{e&&(e=!1,emitWarning("AbortController is not defined. If using lru-cache in node 14, load an AbortController polyfill from the `node-abort-controller` package. A minimal polyfill is provided for use by LRUCache.fetch(), but it should not be relied upon in other contexts (eg, passing it to other APIs that use AbortController/AbortSignal might have undesirable effects). You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.","NO_ABORT_CONTROLLER","ENOTSUP",warnACPolyfill))}}let shouldWarn=e=>!o.has(e);Symbol("type");let isPosInt=e=>e&&e===Math.floor(e)&&e>0&&isFinite(e),getUintArray=e=>isPosInt(e)?e<=256?Uint8Array:e<=65536?Uint16Array:e<=4294967296?Uint32Array:e<=Number.MAX_SAFE_INTEGER?ZeroArray:null:null;let ZeroArray=class ZeroArray extends Array{constructor(e){super(e),this.fill(0)}};let Stack=class Stack{static #e=!1;static create(e){let t=getUintArray(e);if(!t)return[];Stack.#e=!0;let r=new Stack(e,t);return Stack.#e=!1,r}constructor(e,t){if(!Stack.#e)throw TypeError("instantiate Stack using Stack.create(n)");this.heap=new t(e),this.length=0}push(e){this.heap[this.length++]=e}pop(){return this.heap[--this.length]}};let LRUCache=class LRUCache{static{r=Symbol.toStringTag}#t;#r;#s;#o;#i;#n;#a;#c;#l;#u;#p;#d;#h;#g;#m;#_;#f;#T;#y;#E;#b;#w;static unsafeExposeInternals(e){return{starts:e.#T,ttls:e.#y,sizes:e.#f,keyMap:e.#c,keyList:e.#l,valList:e.#u,next:e.#p,prev:e.#d,get head(){return e.#h},get tail(){return e.#g},free:e.#m,isBackgroundFetch:t=>e.#k(t),backgroundFetch:(t,r,s,o)=>e.#v(t,r,s,o),moveToTail:t=>e.#A(t),indexes:t=>e.#S(t),rindexes:t=>e.#O(t),isStale:t=>e.#P(t)}}get max(){return this.#t}get maxSize(){return this.#r}get calculatedSize(){return this.#a}get size(){return this.#n}get fetchMethod(){return this.#i}get dispose(){return this.#s}get disposeAfter(){return this.#o}constructor(e){this.#R=()=>{},this.#G=()=>{},this.#F=()=>{},this.#P=()=>!1,this.#U=e=>{},this.#C=(e,t,r)=>{},this.#D=(e,t,r,s)=>{if(r||s)throw TypeError("cannot set size without setting maxSize or maxEntrySize on cache");return 0},this[r]="LRUCache";let{max:t=0,ttl:s,ttlResolution:i=1,ttlAutopurge:n,updateAgeOnGet:a,updateAgeOnHas:c,allowStale:l,dispose:u,disposeAfter:p,noDisposeOnSet:d,noUpdateTTL:h,maxSize:g=0,maxEntrySize:m=0,sizeCalculation:_,fetchMethod:T,noDeleteOnFetchRejection:y,noDeleteOnStaleGet:E,allowStaleOnFetchRejection:b,allowStaleOnFetchAbort:w,ignoreFetchAbort:k}=e;if(0!==t&&!isPosInt(t))throw TypeError("max option must be a nonnegative integer");let v=t?getUintArray(t):Array;if(!v)throw Error("invalid max value: "+t);if(this.#t=t,this.#r=g,this.maxEntrySize=m||this.#r,this.sizeCalculation=_,this.sizeCalculation){if(!this.#r&&!this.maxEntrySize)throw TypeError("cannot set sizeCalculation without setting maxSize or maxEntrySize");if("function"!=typeof this.sizeCalculation)throw TypeError("sizeCalculation set to non-function")}if(void 0!==T&&"function"!=typeof T)throw TypeError("fetchMethod must be a function if specified");if(this.#i=T,this.#b=!!T,this.#c=new Map,this.#l=Array(t).fill(void 0),this.#u=Array(t).fill(void 0),this.#p=new v(t),this.#d=new v(t),this.#h=0,this.#g=0,this.#m=Stack.create(t),this.#n=0,this.#a=0,"function"==typeof u&&(this.#s=u),"function"==typeof p?(this.#o=p,this.#_=[]):(this.#o=void 0,this.#_=void 0),this.#E=!!this.#s,this.#w=!!this.#o,this.noDisposeOnSet=!!d,this.noUpdateTTL=!!h,this.noDeleteOnFetchRejection=!!y,this.allowStaleOnFetchRejection=!!b,this.allowStaleOnFetchAbort=!!w,this.ignoreFetchAbort=!!k,0!==this.maxEntrySize){if(0!==this.#r&&!isPosInt(this.#r))throw TypeError("maxSize must be a positive integer if specified");if(!isPosInt(this.maxEntrySize))throw TypeError("maxEntrySize must be a positive integer if specified");this.#I()}if(this.allowStale=!!l,this.noDeleteOnStaleGet=!!E,this.updateAgeOnGet=!!a,this.updateAgeOnHas=!!c,this.ttlResolution=isPosInt(i)||0===i?i:1,this.ttlAutopurge=!!n,this.ttl=s||0,this.ttl){if(!isPosInt(this.ttl))throw TypeError("ttl must be a positive integer if specified");this.#q()}if(0===this.#t&&0===this.ttl&&0===this.#r)throw TypeError("At least one of max, maxSize, or ttl is required");if(!this.ttlAutopurge&&!this.#t&&!this.#r){let e="LRU_CACHE_UNBOUNDED";shouldWarn(e)&&(o.add(e),emitWarning("TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.","UnboundedCacheWarning",e,LRUCache))}}getRemainingTTL(e){return this.#c.has(e)?1/0:0}#q(){let e=new ZeroArray(this.#t),t=new ZeroArray(this.#t);this.#y=e,this.#T=t,this.#F=(r,o,i=s.now())=>{if(t[r]=0!==o?i:0,e[r]=o,0!==o&&this.ttlAutopurge){let e=setTimeout(()=>{this.#P(r)&&this.delete(this.#l[r])},o+1);e.unref&&e.unref()}},this.#R=r=>{t[r]=0!==e[r]?s.now():0},this.#G=(s,o)=>{if(e[o]){let i=e[o],n=t[o];if(!i||!n)return;s.ttl=i,s.start=n,s.now=r||getNow();let a=s.now-n;s.remainingTTL=i-a}};let r=0,getNow=()=>{let e=s.now();if(this.ttlResolution>0){r=e;let t=setTimeout(()=>r=0,this.ttlResolution);t.unref&&t.unref()}return e};this.getRemainingTTL=s=>{let o=this.#c.get(s);if(void 0===o)return 0;let i=e[o],n=t[o];if(!i||!n)return 1/0;let a=(r||getNow())-n;return i-a},this.#P=s=>{let o=t[s],i=e[s];return!!i&&!!o&&(r||getNow())-o>i}}#R;#G;#F;#P;#I(){let e=new ZeroArray(this.#t);this.#a=0,this.#f=e,this.#U=t=>{this.#a-=e[t],e[t]=0},this.#D=(e,t,r,s)=>{if(this.#k(t))return 0;if(!isPosInt(r)){if(s){if("function"!=typeof s)throw TypeError("sizeCalculation must be a function");if(!isPosInt(r=s(t,e)))throw TypeError("sizeCalculation return invalid (expect positive integer)")}else throw TypeError("invalid size value (must be positive integer). When maxSize or maxEntrySize is used, sizeCalculation or size must be set.")}return r},this.#C=(t,r,s)=>{if(e[t]=r,this.#r){let r=this.#r-e[t];for(;this.#a>r;)this.#L(!0)}this.#a+=e[t],s&&(s.entrySize=r,s.totalCalculatedSize=this.#a)}}#U;#C;#D;*#S({allowStale:e=this.allowStale}={}){if(this.#n)for(let t=this.#g;this.#j(t)&&((e||!this.#P(t))&&(yield t),t!==this.#h);)t=this.#d[t]}*#O({allowStale:e=this.allowStale}={}){if(this.#n)for(let t=this.#h;this.#j(t)&&((e||!this.#P(t))&&(yield t),t!==this.#g);)t=this.#p[t]}#j(e){return void 0!==e&&this.#c.get(this.#l[e])===e}*entries(){for(let e of this.#S())void 0===this.#u[e]||void 0===this.#l[e]||this.#k(this.#u[e])||(yield[this.#l[e],this.#u[e]])}*rentries(){for(let e of this.#O())void 0===this.#u[e]||void 0===this.#l[e]||this.#k(this.#u[e])||(yield[this.#l[e],this.#u[e]])}*keys(){for(let e of this.#S()){let t=this.#l[e];void 0===t||this.#k(this.#u[e])||(yield t)}}*rkeys(){for(let e of this.#O()){let t=this.#l[e];void 0===t||this.#k(this.#u[e])||(yield t)}}*values(){for(let e of this.#S()){let t=this.#u[e];void 0===t||this.#k(this.#u[e])||(yield this.#u[e])}}*rvalues(){for(let e of this.#O()){let t=this.#u[e];void 0===t||this.#k(this.#u[e])||(yield this.#u[e])}}[Symbol.iterator](){return this.entries()}find(e,t={}){for(let r of this.#S()){let s=this.#u[r],o=this.#k(s)?s.__staleWhileFetching:s;if(void 0!==o&&e(o,this.#l[r],this))return this.get(this.#l[r],t)}}forEach(e,t=this){for(let r of this.#S()){let s=this.#u[r],o=this.#k(s)?s.__staleWhileFetching:s;void 0!==o&&e.call(t,o,this.#l[r],this)}}rforEach(e,t=this){for(let r of this.#O()){let s=this.#u[r],o=this.#k(s)?s.__staleWhileFetching:s;void 0!==o&&e.call(t,o,this.#l[r],this)}}purgeStale(){let e=!1;for(let t of this.#O({allowStale:!0}))this.#P(t)&&(this.delete(this.#l[t]),e=!0);return e}info(e){let t=this.#c.get(e);if(void 0===t)return;let r=this.#u[t],o=this.#k(r)?r.__staleWhileFetching:r;if(void 0===o)return;let i={value:o};if(this.#y&&this.#T){let e=this.#y[t],r=this.#T[t];if(e&&r){let t=e-(s.now()-r);i.ttl=t,i.start=Date.now()}}return this.#f&&(i.size=this.#f[t]),i}dump(){let e=[];for(let t of this.#S({allowStale:!0})){let r=this.#l[t],o=this.#u[t],i=this.#k(o)?o.__staleWhileFetching:o;if(void 0===i||void 0===r)continue;let n={value:i};if(this.#y&&this.#T){n.ttl=this.#y[t];let e=s.now()-this.#T[t];n.start=Math.floor(Date.now()-e)}this.#f&&(n.size=this.#f[t]),e.unshift([r,n])}return e}load(e){for(let[t,r]of(this.clear(),e)){if(r.start){let e=Date.now()-r.start;r.start=s.now()-e}this.set(t,r.value,r)}}set(e,t,r={}){if(void 0===t)return this.delete(e),this;let{ttl:s=this.ttl,start:o,noDisposeOnSet:i=this.noDisposeOnSet,sizeCalculation:n=this.sizeCalculation,status:a}=r,{noUpdateTTL:c=this.noUpdateTTL}=r,l=this.#D(e,t,r.size||0,n);if(this.maxEntrySize&&l>this.maxEntrySize)return a&&(a.set="miss",a.maxEntrySizeExceeded=!0),this.delete(e),this;let u=0===this.#n?void 0:this.#c.get(e);if(void 0===u)u=0===this.#n?this.#g:0!==this.#m.length?this.#m.pop():this.#n===this.#t?this.#L(!1):this.#n,this.#l[u]=e,this.#u[u]=t,this.#c.set(e,u),this.#p[this.#g]=u,this.#d[u]=this.#g,this.#g=u,this.#n++,this.#C(u,l,a),a&&(a.set="add"),c=!1;else{this.#A(u);let r=this.#u[u];if(t!==r){if(this.#b&&this.#k(r)){r.__abortController.abort(Error("replaced"));let{__staleWhileFetching:t}=r;void 0!==t&&!i&&(this.#E&&this.#s?.(t,e,"set"),this.#w&&this.#_?.push([t,e,"set"]))}else!i&&(this.#E&&this.#s?.(r,e,"set"),this.#w&&this.#_?.push([r,e,"set"]));if(this.#U(u),this.#C(u,l,a),this.#u[u]=t,a){a.set="replace";let e=r&&this.#k(r)?r.__staleWhileFetching:r;void 0!==e&&(a.oldValue=e)}}else a&&(a.set="update")}if(0===s||this.#y||this.#q(),this.#y&&(c||this.#F(u,s,o),a&&this.#G(a,u)),!i&&this.#w&&this.#_){let e;let t=this.#_;for(;e=t?.shift();)this.#o?.(...e)}return this}pop(){try{for(;this.#n;){let e=this.#u[this.#h];if(this.#L(!0),this.#k(e)){if(e.__staleWhileFetching)return e.__staleWhileFetching}else if(void 0!==e)return e}}finally{if(this.#w&&this.#_){let e;let t=this.#_;for(;e=t?.shift();)this.#o?.(...e)}}}#L(e){let t=this.#h,r=this.#l[t],s=this.#u[t];return this.#b&&this.#k(s)?s.__abortController.abort(Error("evicted")):(this.#E||this.#w)&&(this.#E&&this.#s?.(s,r,"evict"),this.#w&&this.#_?.push([s,r,"evict"])),this.#U(t),e&&(this.#l[t]=void 0,this.#u[t]=void 0,this.#m.push(t)),1===this.#n?(this.#h=this.#g=0,this.#m.length=0):this.#h=this.#p[t],this.#c.delete(r),this.#n--,t}has(e,t={}){let{updateAgeOnHas:r=this.updateAgeOnHas,status:s}=t,o=this.#c.get(e);if(void 0!==o){let e=this.#u[o];if(this.#k(e)&&void 0===e.__staleWhileFetching)return!1;if(!this.#P(o))return r&&this.#R(o),s&&(s.has="hit",this.#G(s,o)),!0;s&&(s.has="stale",this.#G(s,o))}else s&&(s.has="miss");return!1}peek(e,t={}){let{allowStale:r=this.allowStale}=t,s=this.#c.get(e);if(void 0===s||!r&&this.#P(s))return;let o=this.#u[s];return this.#k(o)?o.__staleWhileFetching:o}#v(e,t,r,s){let o=void 0===t?void 0:this.#u[t];if(this.#k(o))return o;let i=new n,{signal:a}=r;a?.addEventListener("abort",()=>i.abort(a.reason),{signal:i.signal});let c={signal:i.signal,options:r,context:s},cb=(s,o=!1)=>{let{aborted:n}=i.signal,a=r.ignoreFetchAbort&&void 0!==s;return(r.status&&(n&&!o?(r.status.fetchAborted=!0,r.status.fetchError=i.signal.reason,a&&(r.status.fetchAbortIgnored=!0)):r.status.fetchResolved=!0),!n||a||o)?(this.#u[t]===l&&(void 0===s?l.__staleWhileFetching?this.#u[t]=l.__staleWhileFetching:this.delete(e):(r.status&&(r.status.fetchUpdated=!0),this.set(e,s,c.options))),s):fetchFail(i.signal.reason)},fetchFail=s=>{let{aborted:o}=i.signal,n=o&&r.allowStaleOnFetchAbort,a=n||r.allowStaleOnFetchRejection,c=a||r.noDeleteOnFetchRejection;if(this.#u[t]===l){let r=!c||void 0===l.__staleWhileFetching;r?this.delete(e):n||(this.#u[t]=l.__staleWhileFetching)}if(a)return r.status&&void 0!==l.__staleWhileFetching&&(r.status.returnedStale=!0),l.__staleWhileFetching;if(l.__returned===l)throw s};r.status&&(r.status.fetchDispatched=!0);let l=new Promise((t,s)=>{let n=this.#i?.(e,o,c);n&&n instanceof Promise&&n.then(e=>t(void 0===e?void 0:e),s),i.signal.addEventListener("abort",()=>{(!r.ignoreFetchAbort||r.allowStaleOnFetchAbort)&&(t(void 0),r.allowStaleOnFetchAbort&&(t=e=>cb(e,!0)))})}).then(cb,e=>(r.status&&(r.status.fetchRejected=!0,r.status.fetchError=e),fetchFail(e))),u=Object.assign(l,{__abortController:i,__staleWhileFetching:o,__returned:void 0});return void 0===t?(this.set(e,u,{...c.options,status:void 0}),t=this.#c.get(e)):this.#u[t]=u,u}#k(e){return!!this.#b&&!!e&&e instanceof Promise&&e.hasOwnProperty("__staleWhileFetching")&&e.__abortController instanceof n}async fetch(e,t={}){let{allowStale:r=this.allowStale,updateAgeOnGet:s=this.updateAgeOnGet,noDeleteOnStaleGet:o=this.noDeleteOnStaleGet,ttl:i=this.ttl,noDisposeOnSet:n=this.noDisposeOnSet,size:a=0,sizeCalculation:c=this.sizeCalculation,noUpdateTTL:l=this.noUpdateTTL,noDeleteOnFetchRejection:u=this.noDeleteOnFetchRejection,allowStaleOnFetchRejection:p=this.allowStaleOnFetchRejection,ignoreFetchAbort:d=this.ignoreFetchAbort,allowStaleOnFetchAbort:h=this.allowStaleOnFetchAbort,context:g,forceRefresh:m=!1,status:_,signal:T}=t;if(!this.#b)return _&&(_.fetch="get"),this.get(e,{allowStale:r,updateAgeOnGet:s,noDeleteOnStaleGet:o,status:_});let y={allowStale:r,updateAgeOnGet:s,noDeleteOnStaleGet:o,ttl:i,noDisposeOnSet:n,size:a,sizeCalculation:c,noUpdateTTL:l,noDeleteOnFetchRejection:u,allowStaleOnFetchRejection:p,allowStaleOnFetchAbort:h,ignoreFetchAbort:d,status:_,signal:T},E=this.#c.get(e);if(void 0===E){_&&(_.fetch="miss");let t=this.#v(e,E,y,g);return t.__returned=t}{let t=this.#u[E];if(this.#k(t)){let e=r&&void 0!==t.__staleWhileFetching;return _&&(_.fetch="inflight",e&&(_.returnedStale=!0)),e?t.__staleWhileFetching:t.__returned=t}let o=this.#P(E);if(!m&&!o)return _&&(_.fetch="hit"),this.#A(E),s&&this.#R(E),_&&this.#G(_,E),t;let i=this.#v(e,E,y,g),n=void 0!==i.__staleWhileFetching,a=n&&r;return _&&(_.fetch=o?"stale":"refresh",a&&o&&(_.returnedStale=!0)),a?i.__staleWhileFetching:i.__returned=i}}get(e,t={}){let{allowStale:r=this.allowStale,updateAgeOnGet:s=this.updateAgeOnGet,noDeleteOnStaleGet:o=this.noDeleteOnStaleGet,status:i}=t,n=this.#c.get(e);if(void 0!==n){let t=this.#u[n],a=this.#k(t);return(i&&this.#G(i,n),this.#P(n))?(i&&(i.get="stale"),a)?(i&&r&&void 0!==t.__staleWhileFetching&&(i.returnedStale=!0),r?t.__staleWhileFetching:void 0):(o||this.delete(e),i&&r&&(i.returnedStale=!0),r?t:void 0):(i&&(i.get="hit"),a)?t.__staleWhileFetching:(this.#A(n),s&&this.#R(n),t)}i&&(i.get="miss")}#x(e,t){this.#d[t]=e,this.#p[e]=t}#A(e){e!==this.#g&&(e===this.#h?this.#h=this.#p[e]:this.#x(this.#d[e],this.#p[e]),this.#x(this.#g,e),this.#g=e)}delete(e){let t=!1;if(0!==this.#n){let r=this.#c.get(e);if(void 0!==r){if(t=!0,1===this.#n)this.clear();else{this.#U(r);let t=this.#u[r];if(this.#k(t)?t.__abortController.abort(Error("deleted")):(this.#E||this.#w)&&(this.#E&&this.#s?.(t,e,"delete"),this.#w&&this.#_?.push([t,e,"delete"])),this.#c.delete(e),this.#l[r]=void 0,this.#u[r]=void 0,r===this.#g)this.#g=this.#d[r];else if(r===this.#h)this.#h=this.#p[r];else{let e=this.#d[r];this.#p[e]=this.#p[r];let t=this.#p[r];this.#d[t]=this.#d[r]}this.#n--,this.#m.push(r)}}}if(this.#w&&this.#_?.length){let e;let t=this.#_;for(;e=t?.shift();)this.#o?.(...e)}return t}clear(){for(let e of this.#O({allowStale:!0})){let t=this.#u[e];if(this.#k(t))t.__abortController.abort(Error("deleted"));else{let r=this.#l[e];this.#E&&this.#s?.(t,r,"delete"),this.#w&&this.#_?.push([t,r,"delete"])}}if(this.#c.clear(),this.#u.fill(void 0),this.#l.fill(void 0),this.#y&&this.#T&&(this.#y.fill(0),this.#T.fill(0)),this.#f&&this.#f.fill(0),this.#h=0,this.#g=0,this.#m.length=0,this.#a=0,this.#n=0,this.#w&&this.#_){let e;let t=this.#_;for(;e=t?.shift();)this.#o?.(...e)}}};t.LRUCache=LRUCache}};